%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: acl97v1.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips -o acl97v1.ps acl97v1.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.04.17:1858
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (acl97v1.dvi)
@start /Fa 43 122 df<B51280A46C1300110579911B>45 D<121C127F12FFA412FE12
380808778718>I<EC1FC0EC7FF0903801E0F8903807C03CEB0F00011E131E133E013C13
1F5B13F85B1201A2485AA20007143F5BA2120F153E49137E121FA348C712FCA4007EEB01
F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F00A2141E5C0078137C5C387C
01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>48 D<EC01801403A21407140F
EC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA214FCA25CA21301A25CA21303A25C
A21307A25CA2130FA25CA2131FA291C7FCA25BA2133EA2137EA2137C13FCB512FCA31932
77B127>I<EC07F0EC3FFCECF81E903803E00F903907800780D90F0013C0011E13035B01
3814E0EB7980EB71C00170130701F014C013E0A201E1130FD9E380138090387F001F013C
140090C7123E5D5D4A5AEC1FE0903807FF804AC7FC6D7E90380007C06E7EA26E7EA51403
1218127EA21407485C5A00E0495AA26C495A007049C7FC147E00785B383C01F0381E07E0
3807FF80D801FCC8FC233479B127>51 D<150E151FA2153F153EA3157E157CA215FC15F8
A2140115F0A2EC03E0A3EC07C0A2EC0F80A2EC1F00A2143EA25C147814F85C1301903803
E0E0ECC1F0EB0781EB0F83EC03E0131E133CEB7C0701F813C0EA01F0EA03E03807C00FD8
0F801380EA1FFC383FFFCF48EBFF82D8F00313FF3860003FC7EA1FF8EC3F00143EA3147E
147CA314FC5CA4146020417DB127>I<010614C090380FC00F91B51280160015FC4913F0
15C0D91CFEC7FC91C8FC133C1338A313781370A313F0EBE0FE9038E3FF809038EF03C039
01FC01E001F87FEBF000497F485A5BC8FCA41401A4003C130300FC5CA34A5A5A00E0495A
A24A5A4AC7FC6C137E00705B387801F8383E07F0381FFFC06C90C8FCEA03F8223478B127
>I<EC01F8EC0FFEEC3FFFECFE0F903901F80780903803E00F903807C01F90380F803FD9
1F001300133E49130E01FC90C7FC5B1201485AA2485AA2380FC1F8EBC7FF9038DE078039
1FB803C001F07FEBE001003F8013C01380A2D87F007FA2127E4A5AA25AA214075DA25A4A
5AA25D141F4AC7FC0078133E007C5B5C6C485A381F07E0EBFFC0000790C8FCEA01F82134
77B127>I<D9E0F81338EBE3FC2601EFFE137801FF14F048EC01E09038FE0E03D807F814
C09039F0060F80390FC0071F90398003FF00391F0001EF001EEB001E003E5C123C485C15
F8485C4813015DC712034A5AA24A5AA2141F92C7FC5C143E147EA25CA2495AA3495AA213
075CA2130F5CA2131FA25C133FA391C8FCA2131C253476B127>I<EC0FC0EC7FF0ECFFFC
903803F07E903807C03E49487EEB1F00013E7F017E14805BA2485AA2485A151FA212075B
A2ED3F00A2485A5DA2000714FEA21401140300035CEBE0070001130E3900F03DF8EB7FF1
EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E133E00FE137E5C48485A4848
5A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127>57 D<161C163CA2167C16FC
A21501821503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A2913803807F82
EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80A2130E131E13
1C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F367BB539>65
D<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF9139FE0001EF49
48EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A4848153CA2485AA2
48481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E
160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413
FC90387FFFF0011F13C0D903FEC9FC323775B437>67 D<92391FE001809238FFF8030207
EBFE07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FCD907F05C49481300
495A4948147E49C8127C137E13FE485A48481578A2485AA248481570A2485A94C7FC123F
5BA3127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E5DA2167EA2007F15
FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFFF001
1F01C0C8FCD903FEC9FC313775B43B>71 D<010FB51280A216009038003FC05DA292C7FC
A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2
133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>73
D<91381FFFFE5C16FC9138003F80A31600A25D157EA315FE5DA314015DA314035DA31407
5DA3140F5DA3141F5DA3143F92C7FCA2121C007E5B00FE137EA214FE485BEAF80100E05B
495A387007E038780FC06C48C8FCEA1FFCEA07F0273579B228>I<0107B512C05BA29026
003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2
130FA25C17E0011F140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA201FE
5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>76 D<902607FF8090383FFF
C0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC71F8A202F11407DA
F0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801FA20107ECC03C030F
1338140016E049010713781770010E14F01503011E15F0705A011C1301A2013C14FD0300
5B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF807FB5140EA23A33
7BB239>78 D<ED1FE0913801FFFC913807E03F91391F800FC091393E0003E002F8EB01F0
495A4948EB00F8494814FC4948147C49C8127E133E017E153E49153F485AA2485A12075B
120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F0160717E0160F007E16
C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F806C6C013EC7FCD8
01F813FC39007E07F090383FFF80D907FCC8FC303775B43B>I<0107B612C04915F88390
3A003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC05CA20101168017
3F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA2
5CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB2
34>I<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C188014
7EA214FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F0
16C09138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913
015E137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8
EE07E032357BB238>82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801
FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D
7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2
001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80F
C000F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F
260FC001141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E127800
705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FE
A25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<3B3FFF
F801FFFE485CA2D801FEC7EA1FC049EC0F80170049140EA2161E120349141CA2163C1207
491438A21678120F491470A216F0121F495CA21501123F90C75BA215035A007E5DA21507
12FE4892C7FCA25D150E48141E151C153C153815786C5C5D007C1301007E495A003EEB0F
806C011EC8FC380FC0FC6CB45A000113E06C6CC9FC2F3570B239>I<B53CC03FFFF003FF
F8601480280FF00001FCC7EA7F806C484AEC3E00193CA219386115036115074E5A030F14
0361031D4AC7FCA2DB38FC130EA203705C15F06C6C01E05C140103C05CDA038014F060DA
0700130160020E4A5AA24A4AC8FCA24A140E147802705C5C5FD9F1C014781770D9F3805C
A201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E5B167C5B1678491470453570B24D>
87 D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0
A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E
147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003
C0202278A027>97 D<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F00738
07E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC
03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>99
D<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8
EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005B
A2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01
FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8
EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E
133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F0000
3C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E00201
13F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3
D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B
133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<EB0FC0EA
03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901
FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F
13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000
FC140E151E48EB07F80070EB01F023357BB327>104 D<EB0180EB07E0A2130FEB07C0EB
038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60
FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB03801307140013
0E131EEA07F8EA01F013337AB118>I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133E
A2137EA2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370EC
E03E9038E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB
80F81300150C48141E151C123EA2007E143C1538127C157800FCEB787015E048EB3FC000
70EB0F8020357BB323>107 D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201
A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2
127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B3
14>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C
3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD8
60F8148012000001021F130360491400A200034A13076049013E130FF081800007027EEC
83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C01
0049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C
7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60
F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201133801C013F0A200
0F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14
FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FC
A248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F
006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F
81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814
E0EA07871307000313C01200010F130316F01480A2011F130716E01400A249EB0FC0A201
3EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC00
0190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0
391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC
12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E
227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EB
E00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA314
7C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB
0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA2
1203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07
005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C12
3C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100
035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC30001
90383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC13
FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578
000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800
F878EB7FE0EB1F801E227AA023>I<13F0D803FC1307D80F1E130F000E141F121C123C00
38143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA2140100
0314F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F803800
7FEFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D8
3C1FC7FCEA0FFCEA07F020317AA025>121 D E /Fb 2 115 df<3B07801FC007E03B0FE0
7FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F005B49133E00
C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F8003E003E060A218C093
3801E180271F0007C013E3933800FF00000E6D48137C341B7D993B>109
D<3807803E390FE0FF803818F3C13930F703C0EBFE073860FC0F13F8158039C1F0070091
C7FC1201A2485AA4485AA4485AA448C8FCA2120E1A1B7D991F>114
D E /Fc 6 121 df<B712E0A23907F8000F6C481303ED00F01670A21630A41618A215C0
1600A31401A2140790B5FCA2EBF0071401A21400A21606A21500A2160CA4161CA2163C16
7C16F8486C1307B7FCA2272B7CAA2E>101 D<B512E0A2D807F8C8FC6C5AB3A61660A416
C0A31501A21503A21507ED1F80486C13FFB7FCA2232B7CAA2B>108
D<D8FFF0903807FFE07F0007020013006C6C143C7F017F14187F806D7E130F806D7E6D7E
A26D7E6D7E147E147FEC3F80141F15C0EC0FE0EC07F0140315F8EC01FC140015FE157FED
3F98151F16D8ED0FF81507A215031501A2486C13001678D81FE01438EAFFFC16182B2B7C
AA33>110 D<017F13603901FFE0E0380780F9380E001F48130748130312780070130100
F01300A315607EA26C14007E127F13C0EA3FFEEBFFE06C13F8000713FE6C7FC61480010F
13C01300EC0FE01407EC03F01401A212C01400A37E15E06C1301A26CEB03C06CEB0780B4
EB0F0038F3E01E38E0FFF838C01FE01C2D7BAB26>115 D<007FB712C0A23A7E003FC00F
007890381F8003007015011600126000E016E0A2481660A5C71500B3A8EC7FE0011FB57E
A22B2B7DAA31>I<3B7FFF800FFFC0A2000790390003FE006C48EB01F800015D000015C0
017F13036D5C6E48C7FC90381FC0066D6C5A151C6D6C5A903803F83001015BECFCE06D6C
5AEC7F80A2143F6E7E140F4A7E4A7E1433EC63F8ECE1FCECC0FE903801807E0103137F49
486C7E0106131F4980011C6D7E496D7E0130130301708001F06D7E000181000781D81FF8
491380B46C4913F8A22D2B7DAA33>120 D E /Fd 1 110 df<D801E001FEEB07F03C07F8
03FF801FFC3C0E3E0F07E0783F001C903B3C03F1E01F803C181F7001F3800F003801E0EB
F70026303FC001FE14C01270006001805B02005B0303141FD8E07F4A1480EA407E120003
07143F01FE1700495C60030F147E1201494A13FEF0FC04031F150E00030401130C490280
13F8191C033F01031318000717F04902001438050113704B15E0000F933800F1C049017E
EC7F80D80380011CEC1E003F227EA044>109 D E /Fe 64 124 df<EC1FE0ECFFFC9038
03F01E90390FC00780EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0
B7FCA33901F8001F150FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>12
D<137813FCA212011203EA07F813E0EA0FC0EA1F801300123C5A5A12400E0E71B326>19
D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90C7FC5AA2121E
123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203A26C7E6C7EA2
13787F131C7F130FEB0380EB01C01300124A79B71E>40 D<12C07E1270123C121C7E120F
6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB07C0B0EB0F80
A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC120E5A123C12
705A5A124A7CB71E>I<123C127EB4FCA21380A2127F123D1201A412031300A25A120612
0E120C121C5A5A126009177A8715>44 D<B512F0A514057F921A>I<123C127E12FFA412
7E123C08087A8715>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0
391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14
F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>48
D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>
I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060
130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F80150014
7E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C14
70001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F00
1FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0F
E015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315
FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE039
0FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2
143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA0180
120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A3
21337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9
EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215
F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F0038
0F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13E090383F
00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A12
7EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015
FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E0
3903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA3
4814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C
141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126
>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E130000
1C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE0780
3907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF800
1E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C1478
7E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0
EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F812
7EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E0
1C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715
C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126
>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<15E0A3
4A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00F
A2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77EA2498116
3FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>
65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617
E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0
EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF
00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C
903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C
485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F161C17
186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D9
0FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE
3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3
EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000
014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150FEE03E0
1601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E151E15
0EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812E0A32E
337DB234>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD9
1FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A171C
123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121F
A26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF8
1C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>71 D<B5D8FE03B512F8A30001
90C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337E
B23A>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C
13FE6C485A380F03F03803FFC0C690C7FC20357DB227>74 D<B512FEA3D803FEC9FC6C5A
B3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337DB230>76
D<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3
D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E
6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80F
F04B7EB5011C90387FFFF8A33D337CB246>I<EC07FC91387FFFC0903901FC07F0903907
E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F82
49157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA300
3F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A
6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377CB4
3C>79 D<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA2
17F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512
F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83
160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F0
6F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F13
38933807F070C93801FFE09338003F8036357EB239>82 D<90381FE00390387FFC0748B5
FC3907F01FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92C7FC12
7F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302
001380157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E
01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>I<007FB712FEA3
90398007F001D87C00EC003E0078161E0070160EA20060160600E01607A3481603A6C715
00B3AB4A7E011FB512FCA330337DB237>I<B500FE90381FFFF8A3000190C813006C4815
3C1718B3AF1738017F1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49
C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A>I<B5D8F007
B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F0000193083
6D020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F
95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C0101
1718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203
D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA2
4B141C020115184C357FB24F>87 D<267FFFFC90B512C0A3000101E090381FF80026007F
80EB0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13E0
6D6C485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E913806
3FC0140E4A6C7E9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E49
81010E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A335337E
B23A>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817
386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C9138
3FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B5
12FCA337337FB23A>I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C
0038EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A
4AC7FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A
1638485A4848147816F84848130148481307153FB7FCA326337CB22F>I<EB7F803803FF
F0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF8738
03FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180
391FC1E1FF2607FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC
3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316
F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0
C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007
120FEA1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330
000F14706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC
0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7
FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E
3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C039
0FC007E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA2
6C1418A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D
237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB0700
49C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F
809039FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB000748
80A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121E
A2121F380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA5
6C141F007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126
>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE
497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA
0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0
EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13
E0130714C0130F007C138038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA31207
1203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7
FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313
F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703
F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F38
7FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217E
A041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25B
A25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007
C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A800
7E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FC
EB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48
EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F
80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA0
2B>I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F
123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F8
1EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF90
38E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217F
A01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C
7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E
15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0
A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E
1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA3
5D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EB
FFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D137001
7E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5A
A2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100
141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F03
0F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE
6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB
7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D
5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEB
F000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001F
C00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360EC
C0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA2
14E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>
I<B712F8A22502809426>123 D E /Ff 3 52 df<13E01201120712FF12F91201B3A748
7EB512C0A212217AA01E>49 D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812
F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E1338
5B5B3801C00CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313
C0380F03E0381C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0F
C03801FF00A2380003E0EB00F01478147C143E143F1230127812FCA2143E48137E006013
7C003813F8381E03F0380FFFC00001130018227DA01E>I E /Fg
3 111 df<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F49C7FC
13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D
7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA007E
7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A
495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A>
I<126012F07EA21278127CA2123C123EA2121E121FA27E7FA212077FA212037FA212017F
A212007FA21378137CA2133C133EA2131E131FA27F80A2130780A26D7EA2130180A21300
80A21478147CA2143C143EA2141E141FA2801580A2140715C0A2140315E0A2140115F0A2
140015F8A21578157CA2153C153EA2151E150C1F537BBD2A>110
D E /Fh 20 118 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F49
903807C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F
16C090C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF8
18003F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB
0F802E267DA435>11 D<ED01FC923807FF8092381E07C092387801E003E013F0913901C0
00F84A5A4AC7FC020E14FC5C5C143002701301026014F814E05C010114034A14F0130391
C7EA07E017C049140F0106EC1F809238FFBF00D90E0113FC90390C0381F8EDFFFE020013
1F011C010013800118140F17C0A213380130EC07E0A2160F13701360A301E0141F4915C0
A30001153F1780A2EE7F00120316FE5E6D495AD80760495AD80670495A6D495A6D495AD8
0E0E49C7FC390C0780FC903801FFF09038007F80001C90C9FC1218A312381230A3127012
60A312E05AA22E4B7EBA2F>I<0107B512FCA216F890390007F8005DA2140FA25DA2141F
A25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130F
A25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA326397DB824>73
D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147FA292C9
FCA25CA25CA21301A25CA21303A25CA2130718404A15C0A2010F150118804A1403A2011F
16005F4A1406170E013F151E171C4A143C177C017F5D160391C7120F49EC7FF0B8FCA25F
32397DB839>76 D<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C020616
78DA0EFF157081020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C1430150702
706D1303030392C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C163F01
03EDC01C041F131891C713E0160F49EDF03818300106140717F8010E02031370EFFC6013
0CEE01FE011C16E004005B011815FF177F1338600130153FA20170151F95C8FC01F081EA
07FCB512E01706A245397DB843>78 D<0103B7FC4916E018F8903B0007F80007FC4BEB00
FE187F020FED3F80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F80A292C813
0018FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FCCAFCA25CA2
1307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA33B397DB835
>80 D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB01FE02
F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7FC8080
6D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F150016
7F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A5A6D49
5A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC313D7CBA
33>83 D<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7007F141C12
1E001C92C7FCA2485CA200305C007017180060130112E0485CA21403C716005DA21407A2
5DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A2
5CEB0FFC003FB6FC5AA237397EB831>I<267FFFFC91383FFFC0B55DA2000390C83807FC
006C48ED03E06060000094C7FC5F17065FA25F6D5DA26D5D17E05F4C5AA24CC8FC6E1306
A2013F5C161C16185EA25E6E5BA2011F495A150393C9FC1506A25D6E5AA2010F5B157015
605DA2ECE18002E3CAFC14F3EB07F614FE5C5CA25C5CA26D5AA25C91CBFC3A3B7CB830>
86 D<49B500F890387FFFF095B5FC1AE0D90003018090380FFC004BC713E00201ED0780
4EC7FC6E6C140E606F5C705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B70
5A16F96FB45A94C9FC6F5AA36F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03
E07F15C04A486C7EEC0300020613034A805C4A6D7E14704A1300494880495A49C86C7E13
0E011E153F017E4B7ED803FF4B7E007F01E0011FEBFFC0B5FC6144397EB845>88
D<B500FC91383FFFE0A3000390C83807FC006CEE03E06C5F4D5A95C7FC6D6C140E5F5F6D
6C14305F5F6D6C495A4CC8FC010F5C6E130E160C01075C6E5B5E6D6C5B15014B5AD901FE
90C9FC15065D6D6C5A5D15706E5A5D5D6ECAFC5CA3147E14FEA35C1301A35C1303A35C13
07A2130F000FB512F0A25D3B397DB830>I<133FEA1FFFA3C67E137EA313FE5BA312015B
A312035BA31207EBE0FCEBE3FF9038E707C0390FFE03E09038F801F001F013F8EBE00048
5A15FC5BA2123F90C7FCA214015A127EA2140312FE4814F8A2140715F05AEC0FE0A215C0
EC1F80143F00781400007C137E5C383C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB9
24>98 D<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A1207
485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA7
007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF838003F
C020267DA427>101 D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC170016
1C4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92
C8FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9
FC131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<150FED3F80A2157FA3160015
1C92C7FCABEC0F80EC3FE0ECF0F0903801C0F849487E14005B130E130C131CEB18011338
01305BA2EB0003A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147E
A214FEA25CA21301001E5B123F387F83F0A238FF87E0495A00FE5BD87C1FC8FCEA707EEA
3FF8EA0FC0214981B722>106 D<EB0FC0EA03FF5AA2EA001F1480A2133FA21400A25BA2
137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA2
90C7FCA25AA2EA7E03A2EAFE07130612FCA2130E130C131C1318EA7C38EA3C70EA1FE0EA
0780123B7DB919>108 D<90390F8003F090391FE00FFC903939F03C1F903A70F8700F80
903AE0FDE007C09038C0FF80030013E00001491303018015F05CEA038113015CA2D80003
1407A25CA20107140FA24A14E0A2010F141F17C05CEE3F80131FEE7F004A137E16FE013F
5C6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FCA25BA212
01A25BA21203A25B1207B512C0A32C3583A42A>112 D<14FF010313C090380F80F09038
3E00380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC14FF
6C14806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB03C0
12F800E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>115
D<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA3
13FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F130CEB801C141814385C
146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I<13F8D803FE1438D807
0F147C000E6D13FC121C1218003814011230D8701F5C12601503EAE03F00C001005B5BD8
007E1307A201FE5C5B150F1201495CA2151F120349EC80C0A2153F1681EE0180A2ED7F03
03FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC07F8903907F001F02A267EA4
30>I E /Fi 4 52 df<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2
003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803
E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487E
B512F8A215267BA521>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC
6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B90387001
8013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313
E0380F01F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07
E03801FF8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B0078
133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>I E
/Fj 22 120 df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F
80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579A41B>58
D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A2020780
15C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7FA20101
824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151FA2017E
82017C8101FE83B500F80107B61280A4413A7DB948>65 D<DB3FFCEB01C00203B5EAC003
021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF0
80494880485B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C8FC12
FFAB043FB61280A2127F7FDC0003EBC000123FA27F121FA26C7EA26C7F6C7F6C7F7ED97F
F85C6D7E6DB45C010701C05B6D01FCEBFF3F010090B5EAFE0F021FECF8030203ECE00091
26003FFEC9FC413B7BB94B>71 D<B8FC17F017FEEFFF8028007FF8000F13C0040113E070
13F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C0
91B7120017FC17E002F8C9FCB3A4B612FCA438397DB841>80 D<B712FCEEFFE017FC17FF
28007FF8000F13C004017F707F717E717EA2717EA284A760A24D5A604D5A4D5A04035B04
1F90C8FC91B612FC17E0839139F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF0
84177F1901DD3FFE13E0B600FC011F130394390FFF87C071EBFF8005011400CBEA1FFC44
3A7DB848>82 D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0
001F4848130F48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13
FC387FFFE014FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F
1480EC007F030F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0
495A01F813039039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7B
B935>I<003FB91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C17
07A200781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<EB3FFE
0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8
FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF
6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA4
2E>97 D<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF8121F
13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C6CEB
07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A>99
D<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC
1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F
6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025
257DA42C>101 D<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C
01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>104
D<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512
F8A4153B7DBA1B>I<13FFB5FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F
804BC7FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E
7F6E7F82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932>107
D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FEEB7FC000FF903803FFF802
0F13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8
FC3F13FFA430257DA435>110 D<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF0
0113800003496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217
F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E002
0390C7FC91C9FCACB512FCA42F357EA435>112 D<9038FE03F000FFEB0FFEEC3FFF9138
7C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512
FEA422257EA427>114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E13
01007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203
C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F0
07F090B512C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001F
EBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D138090
3803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E
4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435>I<B539F001FFF8A4
000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F801
1F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA2
6E5AA26E5AA26E5AA22D257EA432>I<B500F1B538803FFFA43D07FE000FF80003E06C6C
010715C082028015076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF0
1E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00F
F10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E
147C023C143C40257EA445>I E /Fk 28 122 df<127812FCA27EA27E7E7EEA1F80120F
13C01207EA03E01201120013C00B1068B92A>18 D<EA03C0EA07F0120F121F13F8A313F0
EA07B0EA003013701360A213E013C01201EA038013005A120E5A5A5A5A5A0D197A8819>
44 D<387FFFF8A2B5FCA214F0150579941E>I<0103B612FEEFFFC018F0903B0007F8000F
F84BEB03FCEF00FE020F157FF03F804B141F19C0021F150F19E05D1807143F19F05DA214
7FA292C8FCA25C180F5CA2130119E04A151FA2130319C04A153FA201071780187F4A1600
A2010F16FEA24A4A5A60011F15034D5A4A5D4D5A013F4B5A173F4A4AC7FC17FC017FEC03
F84C5A91C7EA1FC04949B45A007F90B548C8FCB712F016803C397CB83F>68
D<0103B5D8F80FB512E0A390260007F8C7381FE0004B5DA2020F153F615DA2021F157F96
C7FC5DA2023F5D605DA2027F14016092C7FCA24A1403605CA249B7FC60A202FCC7120701
03150F605CA20107151F605CA2010F153F605CA2011F157F95C8FC5CA2013F5D5F5CA201
7F14015F91C7FC491403007FD9FE01B512F8B55BA243397CB83E>72
D<0207B512F0A391390007FC006F5AA215075EA3150F5EA3151F5EA3153F5EA3157F93C7
FCA35D5DA314015DA314035DA31407A25DA2140FA2003F5C5A141F485CA24A5A12FC00E0
49C8FC14FE00705B495A6C485A381E0FC06CB4C9FCEA01F82C3B78B82C>74
D<0103B500F890387FFFE0A21AC090260007F8C7380FFC004B15E061020F4BC7FC183E4B
5C18F0021F4A5A4D5A4BEB0F804DC8FC023F143C5F4B5B4C5A027FEB07C04CC9FCED001E
5E4A5BED01FCECFE0315070101497E151FECFC7C4B7E903903FDE07FDAFFC07F1580ED00
3F49488014F84A131F83130F160F4A801607011F81A24A130383133F16014A80A2017F6E
7EA291C8FC494A7F007F01FE011F13FCB55CA243397CB840>I<ED03FE92383FFFC09238
FC07F0913903E001F891390F80007C023FC77E027E8002F815804948EC0FC0EB07E04948
EC07E0131F4A15F049C81203137E01FE16F8485AA2485AA2485AA2120F5B001F16075B12
3FA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F18005F5F16015F6C4B5A4C5AA24C
5A6C4B5A6D4A5A001F93C7FC6D147E000F5D6C6CEB03F06C6C495A6C6CEB0F806C6C013F
C8FC90383F01FC90381FFFE0010190C9FC353D74BA40>79 D<14F8EB07FE90381F871C90
383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300
A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C48
5B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E090383F00
F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00
EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB
0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>101 D<ED07C0ED1FF0ED3E38
ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512
C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F
5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C
82BA19>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07
F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F
000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0
A216704814E0007E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB9
2A>104 D<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E
1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E0
13C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>
I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE0
15F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC
00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F80
9039801F81C0A21583003F013F138001001303A21507481500007E133EEC1E0E151E00FE
6D5A48EB07F80038EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA2
1400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA2
5BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7C
E0121FEA0F80123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C078
3E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE
007018C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F
5C0001177E495C18FE031F5C120349DA8001131C18F8033F153C00070403133849020013
F0A24B1570000F17E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C7
0038143C3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C
1F787F39383FF00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C
5BA2150F00015D5B151F5E12034990383F8380160316070007027F130049137EA2160E00
0F147C49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803
FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA248
5A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0
007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039
078007C090391FE03FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0
FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B
5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001
FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<ECF803903807FE07
90381F871F90383E03BF017C13FEEBF80112013803F000484813FC120F5B001F130115F8
EA3F80A2007F1303010013F0A34813074814E0A3140F4814C0A3141F1580143FA2007C13
7FECFF006C5AEB03BF381F0F7F3807FE7EEA01F0C7FC14FE5CA313015CA313035C130748
B512C0A3203577A426>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F80
38383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA31203
5BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>I<14FE903807FF8090
380F83C090383E00E04913F00178137001F813F00001130313F0A215E00003EB01C06DC7
FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F140F123E127E00FE1480
A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB03
80EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA3
12035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0
EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB
03E0390E0F8007121E121C0038140F131F007815C01270013F131F00F0130000E015805B
D8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA20201131E161C15F813
E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090393FF03FC090390FC0
0F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F121C123C0038143F49
131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B151E0003141C5BA2153C
000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F83CEB7FF8EB0FC02126
79A426>I<01F01507D803FC903903801F80D8071E903907C03FC0D80E1F130F121C123C
0038021F131F49EC800F00701607A249133FD8F07E168000E0ED000313FEC64849130718
000001147E5B03FE5B0003160E495BA2171E00070101141C01E05B173C1738A217781770
020314F05F0003010713016D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF8
1FFE90390FE003F0322679A437>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C
123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D0003
147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE038007FF7
EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E06C48
5A383C1F80D80FFEC8FCEA03F0233679A428>121 D E /Fl 67 125
df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F8007FE1FE0
90393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A32801F80003F0
C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11 D<EC0FF8EC7FFE903901F80780
903907E001C090391F8000E090383F0007017E497EA25BA2485A6F5AED018092C8FCA9ED
03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC0FFC
91387FFF70903901F803F0903807E00790381F800FEB3F00137EA25B150748481303ADB7
FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7F
FEEBFFFC903B01F80F83F00F903C07E001CFC00380903C1F8000FF0001C090273F0007FE
130F017E4948497EA2495CA248485C03076E5A03030203C7FC95C8FCA9F007E0BAFCA33C
01F80003F0001F1807B3AA486C496C497E267FFFE0B500C1B51280A3413B7FBA45>I<13
3C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA1E005A5A5A12C00F0F6FB92A>
19 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2
485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F
12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>
I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<121C127FEAFF80A213C0
A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>44
D<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<EB03F8EB1F
FF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2481580A3
007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C
5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>
I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E
126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A
92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A00
0EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF039
03C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A
5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A215
3F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E39
0F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8
A2140114031407A2140F141F141B14331473146314C313011483EB030313071306130C13
1C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C7
3803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5
FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E09038
8003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E00060
5C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB
1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F
49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB
01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C015
1FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A
3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A3
16C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C
140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8
FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E4848
6C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F
147FA26C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FC
153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F80
7FC7FC3807FFFC000113F038003FC0233A7DB72A>57 D<121C127FEAFF80A5EA7F00121C
C7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F00121C
C7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A12
60093479A317>I<007FB812F8B912FCA3CCFCAEB912FCA36C17F836167B9F41>61
D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC18
0FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106
810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D8
0FFC02071380B56C90B512FEA3373C7DBB3E>65 D<913A01FF800180020FEBE003027F13
F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F
01FE153F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93
C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D000016
18017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFF
FC020F13F002011380313D7BBA3C>67 D<B712C016F816FE000190398001FF806C90C7EA
3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC
18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEB
FF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E17
3E171E170EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F150315
01A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807
FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C17
1CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A2
1501A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC91
39FF803F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F48
5A4848150F48481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA2
6C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14
FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F01300
02001380383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FC
A391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3
AD497EB612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F
80EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF03800
7F80233B7DB82B>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533
A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130C
A36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED
7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8
A2ED018045397DB84C>77 D<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F00
1706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E
168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3F
E6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C014
0EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049
486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848
ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150F
A3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A
5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFF
E0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0F
E0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC092
3801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F800
0190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE
3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583
A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07
F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F7484813
7F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C
7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F02
0713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C
14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190
C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F000781600
00701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A33539
7DB83C>I<B500FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E14
03017F93C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA26E1470010315
60A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C02
0F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA339
3B7EB83E>86 D<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7FC013FEC01F0
6D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB8018163891387FC0306E6C
5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E15DF9138019F
F09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A6D7E14E04A6D
7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE822607FF8001
0713E0B500E0013FEBFF80A339397EB83E>88 D<EB1FE0EBFFFC3803E03F3907000F8039
0F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8
EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383F
C01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<BD12C0
A25202809653>124 D E /Fm 12 118 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80
EA1F000B0B6C8A33>46 D<EC07F8EC3FFF91B57E010314E0010F80498090383FFC0F9039
7FE003FC9038FF80014890C77ED803FC147E49EB7E7F0007903801FFBFD9F00713FF4848
481480495A001F5B018013C3003FEB7F810100010013C002FE137F4849133FEA7E014A13
1FA212FEEAFC034A130FA96E131FD8FE011580127EA26E133FD87F0015006C6D5B027F13
FE01801381001F90383FC3FC01C013FF000F6D5B6D6C5B6C6C6C5BD9F80113800003D900
7EC7FC6D9038000F806CB4EC1FC06C6D133FD97FE013FF90263FFC0713806DB612006D5C
010314F801005C023F1380DA07FCC7FC2A3F7CBD33>64 D<EB1FFC90B57E000314E04880
4814FC48809038F007FFEBE0016E7F153F6C48806C48131FC87F150FA5EC0FFF49B5FC13
1F137F48B6FC0007140F4813C0381FFC00EA3FF0EA7FC05B48C7FC5AA56C141F7E6D137F
D83FE0497ED9F807EBFFF06CB712F87E6C14F36C14C1C69138003FF0D91FF090C7FC2D2E
7BAC33>97 D<ECFFF0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE00
0F485A485A4848EB07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F003F
EC01F06DEB03F86C7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C15
80013F14006D13FC01075B010013C0252E79AC33>99 D<ED7FF84B7E5CA280157F1501AB
EB01FF010713C1011F13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F48
481307491303123F491301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D
131F6C6C133F6C6C137F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F
018013F0D901FEC8FC2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC48158048
018013C03A07FE003FE001F8EB0FF048481307484814F8491303003F15FC491301127F90
C7FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB
03FC6CB4130F6C9038C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE0
272E7BAC33>I<EA7FF8487EA4127F1200AC4AB512C04A14E04A14F0A26E14E06E14C091
39000FF0004B5A4B5A4B5A4BC7FC4A5A4A5A4A5A4A5A4A5A4A5A4A5A4A7E01FD7F90B5FC
81ECF3F8ECE3FC14C1EC80FEEC007F5B496D7E6F7E82150F6F7E6F7E8215016F7E3B7FFF
F80FFFF0B56C4813F817FCA217F86C496C13F02E3D7EBC33>107
D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E6C010F13872607FE
07130301FC01FE7F9039F803FC01A201F013F8A401E013F0B3A53C7FFE0FFF07FF80B548
018F13C0A46C486C01071380322C80AB33>109 D<EC01FE3A3FFC0FFFC0486C4813F000
FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002E0EB7FC04AEB3FE04A131FEE0FF0
91C7FC16074915F81603A217FC1601A9160317F8A26D140717F06E130F17E06E131FEE3F
C06E137F9139F801FF80DAFE07130091B55A495C6E5B6E13E0020F1380DA03FEC7FC91C9
FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>112 D<02FF137C0107EBE0FE011F13
F0017F13FC90B512FE4814FF4813C03907FE003F4848131F01F0130F484813071503485A
491301127F90C7FC15005A5AA97E7E15017F123F6D130315076C7E6C6C130F6D131FD807
FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D13F0010F13C0903801FE0090C8FCAF9238
7FFFFC92B512FEA46F13FC2F427CAB33>I<ED03FE3B7FFF801FFF80B5D8C07F13E002C1
B5FC02C314F014C76C9038CFFE0F39001FDFF09139FFC007E092388003C092C8FC5C5C5C
A25CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>I<D83FFCEB1FFE486C497E00FF
5CA2007F80003F800000EC007FB3A75EA25DA26D5B90387F800FDAE03F13FC6DB612FE17
FF6D806D01FE13FE01039038F83FFC010001C0C7FC302C7FAA33>117
D E /Fn 29 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312
011380120313005A1206120E5A5A5A12600B1D78891B>44 D<14FF010713E090381F81F8
90383E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F049130100
1F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15
F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C9038
1F81F8903807FFE0010090C7FC28447CC131>48 D<143014F013011303131F13FFB5FC13
E713071200B3B3B0497E497E007FB6FCA3204278C131>I<EB03FE90381FFFC0017F13F0
3901F80FFC3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F0070
15F800601407126CB415FC7F7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0
A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49
C7120C131E5B013814185B5B485A4848143848C81230000E1570001FB612F0A25A5AB712
E0A326427BC131>I<14FF010713E0011F13F890387F80FC9038FC007E48487F4848EB1F
804848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216FE1500A5
16FFA46C5CA36C7E5D121F7F000F5C6C6C1306150E6C6C5B6C6C5BD8007C5B90383F01E0
90390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C
130F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE06CB51280
C649C7FCEB1FF028447CC131>57 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FF
A203707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F160FA20206801607A24A
6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA249820280C7121FA249C8
7F170FA20106821707A2496F7EA3496F7EA3496F7EA201788313F8486C83D80FFF03037F
B500E0027FEBFFC0A342477DC649>65 D<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E49
7EB612F0A31C447DC323>73 D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3
D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A3
6E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300
A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0
A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>77
D<B56C020FB5FC8080C6040013F06D6CED1F80D96FF8ED0F00A2D967FC1506EB63FEA2EB
61FF01607FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA2
6F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF70
1386A2EF7FC6EF3FE6A2EF1FF6EF0FFEA217071703A217011700A201F0167E183E487ED8
0FFF161EB500F0150EA2180640447CC349>I<B712E016FF17C000019039C0003FF86C6C
48EB03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A4D
C8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E160083
717EA2717EA784A71A6084171FA21AE0716C13C02601FFE002071301B600C01680943801
FC03943900FE0700CBEA3FFEF007F843467CC348>82 D<49B41303010FEBE007013F13F8
9039FE00FE0FD801F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E
82127C00FC81A282A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFF
E06C14FC6C14FF6C15C0013F14F0010F80010180D9001F7F14019138001FFF0303138081
6F13C0167F163F161F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C
5D6D147ED8FBC05CD8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39
C0003FF02B487BC536>I<B600C0010FB5FCA3000101E0C813F026007F80ED1F80F00F00
A21806B3B3A7180E6D6C150CA2181C131F6E1518010F163818306D6C1570606D6C14016D
6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C1380DB
07FCC8FC40467CC349>85 D<B60107B500F890380FFFFEA3000301E0D9001F90C813F06C
0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06FF15
38011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107DB183F5DA2856D6CDA30
1F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E130E027FDA8003140CA2DB
C00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5AA36E6C486E6C5AA36F48
EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015FB6E49EC07FEA36F486E
5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>87 D<EB07FC90383FFF809038F80F
E03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8
FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048
C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF80
2701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EC7F80903803FFF090380FC07C9038
3F000F01FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC000
7FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C
6C13010001EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B
>99 D<EB01FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F
15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2
123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E13
1E90381F80F8903803FFE0010090C7FC242E7DAC2B>101 D<EC0FE0EC7FF8903801F81E
903803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3
C648C8FCB3B2486C7E007F13FFA321467EC51E>I<EA01FC12FFA3120712031201B3EC01
FE913807FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25B
A35BB3A8486CECFF80B5D8F83F13FEA32F457DC436>104 D<EA01E0EA07F8A2487EA46C
5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<EA
01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>108
D<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FD
C07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>110
D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D
7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600
A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC9038
1FC0FE903807FFF89038007F802A2E7DAC31>I<91387F8003903903FFE00790380FE078
90393F801C0F90387E000E496D5AD803F8EB039F0007EC01BF4914FF48487F121F5B003F
81A2485AA348C8FCAB6C7EA3123F7F121F6D5C120F6D5B12076C6C5B6C6C497E6C6C130E
013F131C90380FC0F8903803FFE09038007F0091C7FCAEEEFF80033F13FEA32F3F7DAB33
>113 D<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC00
7E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>I<90383FE0183901FFFC38
3907E01F78390F0003F8001E1301481300007C1478127800F81438A21518A27EA27E6C6C
13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC1403
00C0EB01FE1400157E7E153EA27EA36C143C6C147C15786C14F86CEB01F039F38003E039
F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE
12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F
8030ECC070903807E0E0903801FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3F
FFA300071401000380000181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D
011C13FE90380FC078903803FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA300
0790C7EA7FE06C48EC1F8000011600160E1200160C017F5CA280013F5CA26E1370011F14
6080010F5CA2ECF00101075CA26D6C48C7FCA26E5A01011306A26D6C5AA214FF6E5AA215
B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>I<B539F001FFFCA3000790C7
EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5B
A26E13E0010F5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2
EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5B
B4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121
D E /Fo 34 120 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712
FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A
0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A4
6C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90
C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49
C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF001
0713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE00
1F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFE
C7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA
0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300
D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA2
5E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C
14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC12
3E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<EE1F80A24C7EA24C
7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C82
03FC804B7E02018115F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A
82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA2
49488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455>65
D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949
C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F484916
1F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2
123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C
167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7
FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B5
39E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F
4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C8FC12FF
AD057FB612F0127F7FA3003FDC0001EBF000A27F7EA26C7FA26C7F807E6C7F6C7F6D7E6D
6C5D6D6C7E6D6D5C6D01F05C010101FE143F6D903AFFF001FF9F023F90B6120F0207EDFC
030201EDF000DA001F02C01330030001FCC9FC4C467AC458>71 D<B712E0A5D8001F90C7
FCB3B3B3A4B712E0A523447DC32A>73 D<B500FE067FB512806E95B6FCA26F5EA2D8003F
50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C161EA26E6C163CA36E6C16
78A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA2
6F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D485AA3706C48C7FCA293383F
F81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B6057FB6128071C7FCA2173E
171C61447CC36A>77 D<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E
7E6E7F6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F70
7F707F707F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19FF
847213F884848484A28484197F193F191FA2190F1907B61603190119001A78A24F447CC3
58>I<B9FC18F018FE727E19E0D8001F90C7000F7F05017F716C7E727E727E721380A21A
C084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC18
C092CBFCB3A7B712E0A543447DC34D>80 D<B812F8EFFFC018F818FE727ED8001F90C700
3F13E005037F05007F727E727E727EA28684A286A762A24E90C7FCA24E5A61187F943801
FFF005075B053F138092B7C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2
717FA785A61B0F85A2187F73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0
726C13E0CC0007138050457DC354>82 D<DAFFE0131C010701FE133C013F9038FF807C90
B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848140F491407007F
15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF
6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F80140003077FED007F
82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A01
FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F0480107138031467A
C43E>I<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F90C71607A2007E
1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8FCA545437CC24E
>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D
7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01
000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE01
3EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E
010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC4848
903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C
495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F
7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0140748
48020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B
07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7F
C0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F91
39DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0
004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF
91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163F
B60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457C
C420>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00
0390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>
110 D<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848
C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F17
00A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F
90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590
B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15
C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E
4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FC
ADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1F
FE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A527
2D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48
C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC
6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA2
6C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FE
C7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90
B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391F
FC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA5
0003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C701
0F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B5D8FE1FB539801FFFF0A5000190
27C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F
5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D
902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E903900
0FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C
2C7EAB51>119 D E /Fp 21 122 df<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C
7FA24C7FA34C8083047F80167E8304FE804C7E03018116F8830303814C7E03078116E083
030F814C7E031F81168083033F8293C77E4B82157E8403FE824B800201835D840203834B
800207835D844AB87EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A82010185A2
4A820103854A82010785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A55B547B
D366>65 D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA
803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848
C9FC4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B48
1A3FA24849181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C700
3FEBC000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5
FC6D13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC0
7F033FEE001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>71
D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13E01B
F0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13
004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>80
D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F8573
7F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512C092
B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F727F8684A286
84A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F807039038FE
07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82 D<91260FFF80130791B5
00F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801E0EB0FFD4801800101B5
FC4848C87E48488149150F001F824981123F4981007F82A28412FF84A27FA26D82A27F7F
6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C16FC6C16FF6C17C06C83
6C836D826D82010F821303010082021F16801400030F15C0ED007F040714E01600173F05
0F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0A27F6D4B13806D17006D
5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0486C90B65AD8FC0393C7
FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>I<003FBC1280A59126C0003F
9038C0007F49C71607D87FF8060113C001E08449197F49193F90C8171FA2007E1A0FA300
7C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A553517BD05E>I<B800C00103
B612FCA5D8000701F8CAEBF000F31F80B3B3B11B3FA26D97C7FC81637F1B7E6D6D17FE50
5A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D4B5A6E01F84B5A6E6DDA03FFC8FC6E6CB46C
EB0FFE6F9039F001FFF8030F90B65A030316C0DB007F92C9FC040F14F8DC007F13805E53
7CD167>I<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F
6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91
B7FC01071487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA248
5AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F8
1FC014F06C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>101 D<DA3FFF14FF0103B5D8F00713
C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0
484990387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A900
1F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC
01C314F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C83
6C836C836D828448B9FC12074848C700031480D81FF8EC003F4848150748486F13C08348
5A83A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E04948
5A6C01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>
103 D<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92
393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8
F807B612C0A542537BD24B>I<137F497E000313E0487FA2487FA76C5BA26C5BC613806D
C7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<D93FF0EB1FFCB5
91B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081
ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>110
D<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D
6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F18
80A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D49
5B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8
FC020113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301
017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA271
7FA285187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F
4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFC
B1B612F8A5414D7BB54B>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF8
9139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE
0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7
FC120348EB003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F0
91C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15
C01300020714E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D
141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807
148048C601F8C7FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F
133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F00
15806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF89138
01FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01
E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091
C7FC42377BB54B>I<B600F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E01
3F167C6E15FC6D5E6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F
5B027F143E6F137E023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E
5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC013
3E486C137E486C137C486C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81
FE6CB45A6C13F000035BC690CBFC404D7DB447>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 411 158 a Fp(Represen)l(ting)47 b(P)l(araphrases)f(Using)f
(Sync)l(hronous)f(T)-11 b(A)l(Gs)1683 317 y Fo(Mark)38
b(Dras)858 433 y Fn(Microsoft)32 b(Researc)m(h)i(Institute,)f
(Macquarie)g(Univ)m(ersit)m(y)1509 549 y(NSW)h(Australia)c(2109)1437
666 y Fm(markd@mpce.mq.edu.au)723 983 y Fo(Abstract)166
1154 y Fl(This)57 b(pap)r(er)g(lo)r(oks)f(at)h(represen)n(ting)f(para-)
166 1254 y(phrases)75 b(using)h(the)g(formalism)f(of)h(Syn-)166
1353 y(c)n(hronous)46 b(T)-7 b(A)n(Gs;)59 b(it)48 b(lo)r(oks)f
(particularly)g(at)166 1453 y(comparisons)26 b(with)j(mac)n(hine)f
(translation)f(and)166 1553 y(the)39 b(mo)r(di\014cations)f(it)h(is)f
(necessary)f(to)h(mak)n(e)166 1652 y(to)27 b(Sync)n(hronous)e(T)-7
b(A)n(Gs)27 b(for)g(paraphrasing.)34 b(A)166 1752 y(more)27
b(detailed)g(v)n(ersion)g(is)g(in)h(Dras)f(\(1997a\).)0
2004 y Fo(1)112 b(In)m(tro)s(duction)0 2133 y Fl(The)47
b(con)n(text)g(of)f(the)i(paraphrasing)c(in)j(this)h(w)n(ork)d(is)0
2233 y(that)h(of)g(Reluctan)n(t)g(P)n(araphrase)d(\(Dras,)50
b(1997b\).)91 b(In)0 2333 y(this)35 b(framew)n(ork,)g(a)f(paraphrase)f
(is)i(a)f(to)r(ol)h(for)f(mo)r(dify-)0 2432 y(ing)i(a)f(text)h(to)g
(\014t)g(a)g(set)f(of)h(constrain)n(ts)f(lik)n(e)g(length)h(or)0
2532 y(lexical)c(densit)n(y)-7 b(.)51 b(As)33 b(suc)n(h,)g(generally)e
(applicable)h(para-)0 2631 y(phrases)27 b(are)g(appropriate,)g(so)g
(syn)n(tactic)h(paraphrases|)0 2731 y(paraphrases)33
b(that)j(can)g(b)r(e)g(represen)n(ted)f(in)h(terms)g(of)f(a)0
2831 y(mapping)21 b(b)r(et)n(w)n(een)h(syn)n(tax)f(trees)g(describing)g
(eac)n(h)g(of)h(the)0 2930 y(paraphrase)i(alternativ)n(es|ha)n(v)n(e)g
(b)r(een)j(c)n(hosen)f(for)g(their)0 3030 y(general)g(applicabilit)n(y)
-7 b(.)37 b(Three)27 b(examples)g(are:)0 3213 y(\(1\))171
b(a.)101 b(The)25 b(salesman)f(made)h(an)g(attempt)g(to)g(w)n(ear)443
3313 y(Stev)n(en)i(do)n(wn.)277 3432 y(b.)97 b(The)22
b(salesman)e(attempted)j(to)f(w)n(ear)e(Stev)n(en)443
3531 y(do)n(wn.)0 3707 y(\(2\))171 b(a.)101 b(The)25
b(comp)r(ere)g(who)g(put)g(the)h(con)n(testan)n(t)e(to)443
3807 y(the)j(lie)f(detector)g(gained)g(the)h(c)n(heers)e(of)i(the)443
3907 y(audience.)277 4025 y(b.)97 b(The)30 b(comp)r(ere)g(put)i(the)f
(con)n(testan)n(t)e(to)i(the)443 4125 y(lie)j(detector)g(test.)56
b(He)34 b(gained)g(the)g(c)n(heers)443 4225 y(of)27 b(the)h(audience.)0
4401 y(\(3\))171 b(a.)101 b(The)27 b(smile)h(brok)n(e)e(his)i(comp)r
(osure.)277 4519 y(b.)97 b(His)23 b(comp)r(osure)g(w)n(as)f(brok)n(en)g
(b)n(y)h(the)h(smile.)83 4703 y(A)29 b(p)r(ossible)f(approac)n(h)f(for)
h(represen)n(ting)g(paraphrases)0 4802 y(is)22 b(that)g(of)g
(Chandrasek)-5 b(ar)20 b Fk(et)25 b(al)e Fl(\(1996\))e(in)h(the)g(con)n
(text)g(of)0 4902 y(text)f(simpli\014cation.)34 b(This)21
b(in)n(v)n(olv)n(es)e(a)h(fairly)g(straigh)n(tfor-)0
5001 y(w)n(ard)29 b(represen)n(tation,)g(as)g(the)h(fo)r(cus)g(is)g(on)
g(paraphrases)0 5101 y(whic)n(h)40 b(simplify)h(sen)n(tences)f(b)n(y)g
(breaking)f(them)i(apart.)0 5201 y(Ho)n(w)n(ev)n(er,)28
b(for)i(purp)r(oses)f(other)g(than)h(sen)n(tence)f(simpli\014-)0
5300 y(cation,)h(where)f(paraphrases)e(lik)n(e)j(\(1\))f(are)g(used,)i
(a)e(more)0 5400 y(complex)e(represen)n(tation)f(is)i(needed.)2108
983 y(A)e(paraphrase)e(represen)n(tation)g(can)i(b)r(e)g(though)n(t)g
(of)g(as)2025 1083 y(comprising)33 b(t)n(w)n(o)f(parts|a)h(represen)n
(tation)f(for)h(eac)n(h)g(of)2025 1182 y(the)41 b(source)f(and)h
(target)f(texts,)k(and)d(a)g(represen)n(tation)2025 1282
y(for)32 b(mapping)f(b)r(et)n(w)n(een)h(them.)51 b(T)-7
b(ree)32 b(Adjoining)g(Gram-)2025 1382 y(mars)37 b(\(T)-7
b(A)n(Gs\))39 b(co)n(v)n(er)e(the)i(\014rst)f(part:)58
b(as)38 b(a)g(formalism)2025 1481 y(for)44 b(describing)g(the)g(syn)n
(tactic)g(asp)r(ects)g(of)h(text,)k(they)2025 1581 y(ha)n(v)n(e)36
b(a)i(n)n(um)n(b)r(er)f(of)h(desirable)e(features.)67
b(The)37 b(prop)r(er-)2025 1680 y(ties)e(of)f(the)h(formalism)e(are)h
(w)n(ell)g(established)g(\(Joshi)g Fk(et)2025 1780 y(al)p
Fl(,)k(1975\),)e(and)f(the)h(researc)n(h)d(has)i(also)g(led)g(to)g(the)
h(de-)2025 1880 y(v)n(elopmen)n(t)24 b(of)h(a)f(large)g(standard)g
(grammar)f(\(XT)-7 b(A)n(G)25 b(Re-)2025 1979 y(searc)n(h)g(Group,)h
(1995\),)g(and)g(a)g(parser)f(XT)-7 b(A)n(G)27 b(\(Doran)f
Fk(et)2025 2079 y(al)p Fl(,)i(1994\).)35 b(Mapping)26
b(b)r(et)n(w)n(een)h(source)e(and)i(target)f(texts)2025
2179 y(is)34 b(ac)n(hiev)n(ed)f(b)n(y)g(an)h(extension)f(to)h(the)h(T)
-7 b(A)n(G)34 b(formalism)2025 2278 y(kno)n(wn)26 b(as)g(Sync)n
(hronous)g(T)-7 b(A)n(G,)27 b(in)n(tro)r(duced)f(b)n(y)h(Shieb)r(er)
2025 2378 y(and)37 b(Sc)n(hab)r(es)f(\(1990\).)63 b(Sync)n(hronous)35
b(T)-7 b(A)n(Gs)36 b(\(ST)-7 b(A)n(Gs\))2025 2477 y(comprise)27
b(a)g(pair)g(of)h(trees)f(plus)h(links)g(b)r(et)n(w)n(een)g(no)r(des)f
(of)2025 2577 y(the)22 b(trees.)34 b(The)22 b(original)e(pap)r(er)i(of)
f(Shieb)r(er)h(and)g(Sc)n(hab)r(es)2025 2677 y(prop)r(osed)32
b(using)h(ST)-7 b(A)n(Gs)33 b(to)g(map)g(from)f(a)h(syn)n(tactic)f(to)
2025 2776 y(a)k(seman)n(tic)f(represen)n(tation,)i(while)f(another)g
(pap)r(er)f(b)n(y)2025 2876 y(Ab)r(eill)n(\023)-39 b(e)28
b(\(1990\))f(prop)r(osed)g(their)i(use)f(in)g(mac)n(hine)g(trans-)2025
2976 y(lation.)36 b(The)26 b(use)f(in)h(mac)n(hine)g(translation)e(is)i
(quite)g(close)2025 3075 y(to)33 b(the)h(use)g(prop)r(osed)e(here,)j
(hence)e(the)h(comparison)e(in)2025 3175 y(the)38 b(follo)n(wing)f
(section;)42 b(instead)c(of)g(mapping)f(b)r(et)n(w)n(een)2025
3274 y(p)r(ossibly)30 b(di\013eren)n(t)h(trees)f(in)g(di\013eren)n(t)h
(languages,)e(there)2025 3374 y(is)39 b(a)h(mapping)f(b)r(et)n(w)n(een)
g(trees)g(in)h(the)g(same)f(language)2025 3474 y(with)28
b(v)n(ery)f(di\013eren)n(t)g(syn)n(tactic)g(prop)r(erties.)2025
3672 y Fo(2)112 b(P)m(araphrasing)38 b(with)e(ST)-9 b(A)m(Gs)2025
3803 y Fl(Ab)r(eill)n(\023)-39 b(e)39 b(notes)g(that)g(the)h(ST)-7
b(A)n(G)39 b(formalism)g(allo)n(ws)e(an)2025 3902 y(explicit)23
b(seman)n(tic)f(represen)n(tation)f(to)h(b)r(e)h(a)n(v)n(oided,)g(map-)
2025 4002 y(ping)34 b(from)g(syn)n(tax)f(to)h(syn)n(tax)f(directly)-7
b(.)56 b(This)34 b(\014ts)g(w)n(ell)2025 4102 y(with)27
b(the)g(syn)n(tactic)f(paraphrases)e(describ)r(ed)i(in)h(this)g(pa-)
2025 4201 y(p)r(er;)55 b(but)46 b(it)g(do)r(es)f(not,)50
b(as)45 b(Ab)r(eill)n(\023)-39 b(e)45 b(also)g(notes,)50
b(pre-)2025 4301 y(clude)40 b(seman)n(tic-based)f(mappings,)k(with)d
(Shieb)r(er)g(and)2025 4400 y(Sc)n(hab)r(es)25 b(constructing)g(syn)n
(tax-to-seman)n(tics)f(mappings)2025 4500 y(as)19 b(the)g(\014rst)g
(demonstration)f(of)h(ST)-7 b(A)n(Gs.)34 b(Similarly)-7
b(,)21 b(more)2025 4600 y(seman)n(tically-based)e(paraphrases)f(are)i
(p)r(ossible)h(through)2025 4699 y(an)26 b(indirect)g(application)g(of)
g(ST)-7 b(A)n(Gs)26 b(to)g(a)g(seman)n(tic)g(rep-)2025
4799 y(resen)n(tation,)g(and)i(then)g(bac)n(k)f(to)g(the)h(syn)n(tax.)
2108 4902 y(One)48 b(ma)5 b(jor)47 b(di\013erence)h(b)r(et)n(w)n(een)g
(use)g(in)h(MT)f(and)2025 5001 y(paraphrase)35 b(is)j(in)g
(lexicalisation.)66 b(The)38 b(sorts)f(of)h(map-)2025
5101 y(pings)d(that)g(Ab)r(eill)n(\023)-39 b(e)36 b(deals)e(with)i(are)
e(lexically)h(idiosyn-)2025 5201 y(cratic:)64 b(the)42
b(English)f(sen)n(tences)g Fk(Kim)i(likes)g(Dale)f Fl(and)2025
5300 y Fk(Kim)g(misses)h(Dale)p Fl(,)i(while)c(syn)n(tactically)e
(parallel)h(and)2025 5400 y(seman)n(tically)31 b(fairly)g(close,)i(are)
e(translated)g(to)h(di\013eren)n(t)p eop
%%Page: 2 2
2 1 bop 321 0 a
 9733067 7104430 0 0 16774348 12169625 startTexFig
 321 0 a
%%BeginDocument: diag.eps-1
%ALDOriginalFile:dcom:temp:diag.fre
%ALDBoundingBox: 1692 1584 2287.2756 2425.8898 
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop  
 FontDirectory /Ryumin-Light-83pv-RKSJ-H known 
 {pop pop /Ryumin-Light-83pv-RKSJ-H dup}if  
 }      
 {RC}
 ifelse
}bdf
/FFJ{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop
dup FontDirectory exch known not 
 {FontDirectory /Ryumin-Light-83pv-RKSJ-H known 
{pop /Ryumin-Light-83pv-RKSJ-H}if 
 }if            
 dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
end %. AltsysDict
AltsysDict begin
_bfh
_efh
0 dict dup begin
end 
/f0 /Symbol FF def
_bfh
_efh
MacVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
_bfh
_efh
MacVec 256 array copy
/f2 /|______Courier dup RF findfont def
_bfh
_efh
MacVec 256 array copy
/f3 /|______Times-Italic dup RF findfont def
end %. AltsysDict
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
/bc4 [0 0 0 0] def 
/_lfp4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop 0.5 } { div } ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/bcs [0 0] def 
/_lfs4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/_rfs4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 radius numsteps1 div 2 div /halfstep xdf 
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 div /frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{ arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add numsteps1 
div 1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/_rfp4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 radius abs adjnumsteps   
 dup 2 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf 
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop 0.5 } { div } ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{ arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add 
numsteps1 dup 0 eq {pop} {div} ifelse 
1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs4{_rfs4}ndf
/rfp4{_rfp4}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length 4 eq
 {setcmykcolor}
 {setspotcolor}
 ifelse
}bdf 
/origmtx matrix currentmatrix def
/ImMatrix matrix currentmatrix def
0 setseparationgray
/imgr {1692 1584 2287.2756 2425.8898 } def 
/bleed 0 def 
/clpr {1692 1584 2287.2756 2425.8898 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
-1760 -2197 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
 dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
 setlinewidth vc newpath 
 /ts{{false charpath stroke}ta}def exec 
 xt setlinewidth}bdf 
 
/strk{/textopf currentoverprint def vc setoverprint
 /ts{{false charpath stroke}ta}def exec 
 textopf setoverprint
 }bdf 
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1] vc
vms
1803.7485 2363.6934 m
1798.7431 2363.6934 L
1798.7431 2353.9622 L
1803.7485 2353.9622 L
1803.7485 2363.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1798.743149 2356.493484 m
0 0 32 0 0 (S) ts
}
true
[0 0 0 1]sts
Q
1769.2427 2329.6934 m
1762.7431 2329.6934 L
1762.7431 2319.9622 L
1769.2427 2319.9622 L
1769.2427 2329.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1762.743149 2322.493484 m
0 0 32 0 0 (N) ts
}
true
[0 0 0 1]sts
Q
1773.7485 2329.6934 m
1768.7431 2329.6934 L
1768.7431 2319.9622 L
1773.7485 2319.9622 L
1773.7485 2329.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1768.743149 2322.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1776.2431 2324.6934 m
1773.7431 2324.6934 L
1773.7431 2319.2872 L
1776.2431 2319.2872 L
1776.2431 2324.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1773.743149 2320.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1830.2427 2330.6934 m
1823.7431 2330.6934 L
1823.7431 2320.9622 L
1830.2427 2320.9622 L
1830.2427 2330.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1823.743149 2323.493484 m
0 0 32 0 0 (V) ts
}
true
[0 0 0 1]sts
Q
1834.7485 2330.6934 m
1829.7431 2330.6934 L
1829.7431 2320.9622 L
1834.7485 2320.9622 L
1834.7485 2330.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1829.743149 2323.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1837.2431 2325.6934 m
1834.7431 2325.6934 L
1834.7431 2320.2872 L
1837.2431 2320.2872 L
1837.2431 2325.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1834.743149 2321.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1802.2431 2353.4434 m
1773.2431 2333.4434 L
0.75 w
false setoverprint
S 
n
1802.2431 2353.4434 m
1831.2431 2333.4434 L
S 
n
1804.2427 2296.6934 m
1797.7431 2296.6934 L
1797.7431 2286.9622 L
1804.2427 2286.9622 L
1804.2427 2296.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1797.743149 2289.493484 m
0 0 32 0 0 (V) ts
}
true
[0 0 0 1]sts
Q
1806.2431 2291.6934 m
1803.7431 2291.6934 L
1803.7431 2286.2872 L
1806.2431 2286.2872 L
1806.2431 2291.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1803.743149 2287.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1855.2427 2295.6934 m
1848.7431 2295.6934 L
1848.7431 2285.9622 L
1855.2427 2285.9622 L
1855.2427 2295.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1848.743149 2288.493484 m
0 0 32 0 0 (N) ts
}
true
[0 0 0 1]sts
Q
1859.7485 2295.6934 m
1854.7431 2295.6934 L
1854.7431 2285.9622 L
1859.7485 2285.9622 L
1859.7485 2295.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1854.743149 2288.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1862.2431 2290.6934 m
1859.7431 2290.6934 L
1859.7431 2285.2872 L
1862.2431 2285.2872 L
1862.2431 2290.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1859.743149 2286.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1831.2431 2319.4434 m
1802.2431 2299.4434 L
false setoverprint
S 
n
1831.2431 2319.4434 m
1860.2431 2299.4434 L
S 
n
1802.2431 2286.4434 m
1802.2431 2266.4434 L
S 
n
1796.2436 2263.6934 m
1793.7431 2263.6934 L
1793.7431 2253.9622 L
1796.2436 2253.9622 L
1796.2436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1793.743149 2256.493484 m
0 0 32 0 0 (\\) ts
}
true
[0 0 0 1]sts
Q
1803.7436 2263.6934 m
1796.7431 2263.6934 L
1796.7431 2253.9622 L
1803.7436 2253.9622 L
1803.7436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1796.743149 2256.493484 m
0 0 32 0 0 (m) ts
}
true
[0 0 0 1]sts
Q
1806.2436 2263.6934 m
1803.7431 2263.6934 L
1803.7431 2253.9622 L
1806.2436 2253.9622 L
1806.2436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1803.743149 2256.493484 m
0 0 32 0 0 (i) ts
}
true
[0 0 0 1]sts
Q
vmrs
1810.2456 2263.6934 m
1806.7431 2263.6934 L
1806.7431 2253.9622 L
1810.2456 2253.9622 L
1810.2456 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1806.743149 2256.493484 m
0 0 32 0 0 (s) ts
}
true
[0 0 0 1]sts
Q
1814.2456 2263.6934 m
1810.7431 2263.6934 L
1810.7431 2253.9622 L
1814.2456 2253.9622 L
1814.2456 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1810.743149 2256.493484 m
0 0 32 0 0 (s) ts
}
true
[0 0 0 1]sts
Q
1817.2436 2263.6934 m
1814.7431 2263.6934 L
1814.7431 2253.9622 L
1817.2436 2253.9622 L
1817.2436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1814.743149 2256.493484 m
0 0 32 0 0 (\\) ts
}
true
[0 0 0 1]sts
Q
1940.7485 2363.6934 m
1935.7431 2363.6934 L
1935.7431 2353.9622 L
1940.7485 2353.9622 L
1940.7485 2363.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1935.743149 2356.493484 m
0 0 32 0 0 (S) ts
}
true
[0 0 0 1]sts
Q
1906.2427 2329.6934 m
1899.7431 2329.6934 L
1899.7431 2319.9622 L
1906.2427 2319.9622 L
1906.2427 2329.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1899.743149 2322.493484 m
0 0 32 0 0 (N) ts
}
true
[0 0 0 1]sts
Q
1910.7485 2329.6934 m
1905.7431 2329.6934 L
1905.7431 2319.9622 L
1910.7485 2319.9622 L
1910.7485 2329.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1905.743149 2322.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1913.2431 2324.6934 m
1910.7431 2324.6934 L
1910.7431 2319.2872 L
1913.2431 2319.2872 L
1913.2431 2324.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1910.743149 2320.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1966.2427 2330.6934 m
1959.7431 2330.6934 L
1959.7431 2320.9622 L
1966.2427 2320.9622 L
1966.2427 2330.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1959.743149 2323.493484 m
0 0 32 0 0 (V) ts
}
true
[0 0 0 1]sts
Q
1970.7485 2330.6934 m
1965.7431 2330.6934 L
1965.7431 2320.9622 L
1970.7485 2320.9622 L
1970.7485 2330.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1965.743149 2323.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1973.2431 2325.6934 m
1970.7431 2325.6934 L
1970.7431 2320.2872 L
1973.2431 2320.2872 L
1973.2431 2325.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1970.743149 2321.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1939.2431 2353.4434 m
1910.2431 2333.4434 L
0.75 w
false setoverprint
S 
n
1939.2431 2353.4434 m
1968.2431 2333.4434 L
S 
n
1941.2427 2296.6934 m
1934.7431 2296.6934 L
1934.7431 2286.9622 L
1941.2427 2286.9622 L
1941.2427 2296.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1934.743149 2289.493484 m
0 0 32 0 0 (V) ts
}
true
[0 0 0 1]sts
Q
1943.2431 2291.6934 m
1940.7431 2291.6934 L
1940.7431 2286.2872 L
1943.2431 2286.2872 L
1943.2431 2291.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1940.743149 2287.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1994.7485 2296.6934 m
1989.7431 2296.6934 L
1989.7431 2286.9622 L
1994.7485 2286.9622 L
1994.7485 2296.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1989.743149 2289.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1999.7485 2296.6934 m
1994.7431 2296.6934 L
1994.7431 2286.9622 L
1999.7485 2286.9622 L
1999.7485 2296.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1994.743149 2289.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
2002.2431 2291.6934 m
1999.7431 2291.6934 L
1999.7431 2286.2872 L
2002.2431 2286.2872 L
2002.2431 2291.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1999.743149 2287.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
1968.2431 2319.4434 m
1939.2431 2299.4434 L
false setoverprint
S 
n
1968.2431 2319.4434 m
1997.2431 2299.4434 L
S 
n
1918.2436 2263.6934 m
1915.7431 2263.6934 L
1915.7431 2253.9622 L
1918.2436 2253.9622 L
1918.2436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1915.743149 2256.493484 m
0 0 32 0 0 (\\) ts
}
true
[0 0 0 1]sts
Q
vmrs
1925.7436 2263.6934 m
1918.7431 2263.6934 L
1918.7431 2253.9622 L
1925.7436 2253.9622 L
1925.7436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1918.743149 2256.493484 m
0 0 32 0 0 (m) ts
}
true
[0 0 0 1]sts
Q
1929.7378 2263.6934 m
1925.7431 2263.6934 L
1925.7431 2253.9622 L
1929.7378 2253.9622 L
1929.7378 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1925.743149 2256.493484 m
0 0 32 0 0 (a) ts
}
true
[0 0 0 1]sts
Q
1934.2431 2263.6934 m
1929.7431 2263.6934 L
1929.7431 2253.9622 L
1934.2431 2253.9622 L
1934.2431 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1929.743149 2256.493484 m
0 0 32 0 0 (n) ts
}
true
[0 0 0 1]sts
Q
1939.2431 2263.6934 m
1934.7431 2263.6934 L
1934.7431 2253.9622 L
1939.2431 2253.9622 L
1939.2431 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1934.743149 2256.493484 m
0 0 32 0 0 (q) ts
}
true
[0 0 0 1]sts
Q
1943.2431 2263.6934 m
1938.7431 2263.6934 L
1938.7431 2253.9622 L
1943.2431 2253.9622 L
1943.2431 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1938.743149 2256.493484 m
0 0 32 0 0 (u) ts
}
true
[0 0 0 1]sts
Q
1946.7378 2263.6934 m
1942.7431 2263.6934 L
1942.7431 2253.9622 L
1946.7378 2253.9622 L
1946.7378 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1942.743149 2256.493484 m
0 0 32 0 0 (e) ts
}
true
[0 0 0 1]sts
Q
1949.7402 2263.6934 m
1946.7431 2263.6934 L
1946.7431 2253.9622 L
1949.7402 2253.9622 L
1949.7402 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1946.743149 2256.493484 m
0 0 32 0 0 (r) ts
}
true
[0 0 0 1]sts
Q
1952.2436 2263.6934 m
1949.7431 2263.6934 L
1949.7431 2253.9622 L
1952.2436 2253.9622 L
1952.2436 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1949.743149 2256.493484 m
0 0 32 0 0 (\\) ts
}
true
[0 0 0 1]sts
Q
1939.2431 2286.4434 m
1939.2431 2266.4434 L
0.75 w
false setoverprint
S 
n
1982.7485 2263.6934 m
1977.7431 2263.6934 L
1977.7431 2253.9622 L
1982.7485 2253.9622 L
1982.7485 2263.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1977.743149 2256.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
1985.2431 2258.6934 m
1982.7431 2258.6934 L
1982.7431 2253.2872 L
1985.2431 2253.2872 L
1985.2431 2258.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
1982.743149 2254.693436 m
0 0 32 0 0 (0) ts
}
true
[0 0 0 1]sts
Q
2007.2427 2262.6934 m
2000.7431 2262.6934 L
2000.7431 2252.9622 L
2007.2427 2252.9622 L
2007.2427 2262.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
2000.743149 2255.493484 m
0 0 32 0 0 (N) ts
}
true
[0 0 0 1]sts
Q
2011.7485 2262.6934 m
2006.7431 2262.6934 L
2006.7431 2252.9622 L
2011.7485 2252.9622 L
2011.7485 2262.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
2006.743149 2255.493484 m
0 0 32 0 0 (P) ts
}
true
[0 0 0 1]sts
Q
2014.2431 2257.6934 m
2011.7431 2257.6934 L
2011.7431 2252.2872 L
2014.2431 2252.2872 L
2014.2431 2257.6934 L
n
q
_bfh
_efh
{
f1 [5 0 0 5 0 0] makesetfont
2011.743149 2253.693436 m
0 0 32 0 0 (1) ts
}
true
[0 0 0 1]sts
Q
1997.2431 2286.4434 m
1982.2431 2266.4434 L
false setoverprint
S 
n
1997.2431 2286.4434 m
2011.2431 2266.4434 L
S 
n
1983.7378 2230.6934 m
1979.7431 2230.6934 L
1979.7431 2220.9622 L
1983.7378 2220.9622 L
1983.7378 2230.6934 L
n
q
_bfh
_efh
{
f1 [9 0 0 9 0 0] makesetfont
1979.743149 2223.493484 m
0 0 32 0 0 (\210) ts
}
true
[0 0 0 1]sts
Q
1982.2431 2253.4434 m
1982.2431 2233.4434 L
false setoverprint
S 
n
1871.7431 2380.9434 m
1833.6697 2381.0715 1800.8123 2374.2498 1800.7431 2365.9434 C
2 w
S 
n
1939.7431 2365.9434 m
1940.3326 2373.987 1908.9527 2380.9288 1870.7431 2380.9434 C
S 
n
vmrs
1896.7431 2327.9434 m
1876.3658 2328.1911 1858.7801 2315.0025 1858.7431 2298.9434 C
2 w
S 
n
1764.7431 2319.9434 m
1763.3678 2255.0577 1836.5875 2199.0612 1925.7431 2198.9434 C
S 
n
1924.7431 2198.9434 m
1971.3965 2198.4735 2011.6584 2223.4865 2011.7431 2253.9434 C
S 
n
vmr
end
%%EndDocument

 endTexFig
 286 1083 a Fl(Figure)27 b(1:)37 b Fj(ST)-8 b(A)m(Gs:)43
b Fk(miss-manquer)29 b(\022)-42 b(a)0 1271 y Fl(syn)n(tactic)38
b(structures)g(in)g(F)-7 b(renc)n(h;)44 b(see)38 b(Figure)g(1.)69
b(The)0 1370 y(actual)25 b(mappings)g(dep)r(end)i(on)e(the)h(prop)r
(erties)f(of)g(w)n(ords,)0 1470 y(so)31 b(an)n(y)f(T)-7
b(A)n(Gs)31 b(used)g(in)h(this)f(sync)n(hronous)e(manner)i(will)0
1570 y(necessarily)g(b)r(e)j(lexicalised.)52 b(Here,)34
b(ho)n(w)n(ev)n(er,)e(the)h(sorts)0 1669 y(of)d(paraphrases)c(whic)n(h)
k(are)f(used)g(are)g(lexically)f(general:)0 1769 y(splitting)d(o\013)f
(a)g(relativ)n(e)f(clause,)h(as)g(in)g(\(2\),)h(is)g(not)f(dep)r(en-)0
1868 y(den)n(t)k(on)f(an)n(y)g(lexical)g(attribute)h(of)f(the)h(sen)n
(tence.)83 1974 y(Related)34 b(to)f(this)i(is)e(that,)j(at)e(least)f(b)
r(et)n(w)n(een)h(English)0 2074 y(and)48 b(F)-7 b(renc)n(h,)54
b(extensiv)n(e)48 b(syn)n(tactic)f(mismatc)n(h)i(is)f(un-)0
2174 y(usual,)37 b(m)n(uc)n(h)e(of)g(the)g(di\016cult)n(y)g(in)h
(translation)e(coming)0 2273 y(from)f(lexical)g(idiosyncrasies.)52
b(A)33 b(consequence)g(for)g(ma-)0 2373 y(c)n(hine)43
b(translation)g(is)g(that)h(m)n(uc)n(h)f(of)g(the)h(sync)n(hronis-)0
2473 y(ing)32 b(of)f(T)-7 b(A)n(Gs)32 b(is)g(b)r(et)n(w)n(een)g(elemen)
n(tary)f(trees.)49 b(So,)33 b(ev)n(en)0 2572 y(with)38
b(a)f(more)f(complex)h(syn)n(tactic)g(structure)f(than)i(the)0
2672 y(translation)28 b(examples)h(ab)r(o)n(v)n(e,)f(the)i(c)n(hanges)e
(can)h(b)r(e)g(de-)0 2772 y(scrib)r(ed)22 b(b)n(y)h(comp)r(osing)e
(mappings)i(b)r(et)n(w)n(een)f(elemen)n(tary)0 2871 y(trees,)34
b(or)e(just)i(in)g(the)f(transfer)f(lexicon.)53 b(Ab)r(eill)n(\023)-39
b(e)33 b(notes)0 2971 y(that)c(there)f(are)g(o)r(ccasions)e(where)i(it)
h(is)g(necessary)e(to)h(re-)0 3070 y(place)21 b(an)g(elemen)n(tary)f
(tree)h(b)n(y)g(a)g(deriv)n(ed)g(tree;)i(for)e(exam-)0
3170 y(ple,)k(in)g Fk(Hop)l(eful)t(ly,)k(John)e(wil)t(l)h(work)d
Fl(b)r(ecomes)f Fk(On)i(esp)n(\022)-40 b(er)l(e)0 3270
y(que)33 b(Je)l(an)g(tr)l(avail)t(ler)l(a)p Fl(,)i Fk(hop)l(eful)t(ly)e
Fl(\(an)f(elemen)n(tary)e(tree\))0 3369 y(matc)n(hes)d
Fk(on)j(esp)n(\022)-40 b(er)l(e)30 b(que)e Fl(\(deriv)n(ed\).)123
3502 y
 12859018 7104430 5130977 17958420 34995896 34403860 startTexFig
 123 3502 a
%%BeginDocument: diag.eps-3.2
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -6 612 1 634 437 18 0 1 3 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
q
300 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
78.7859 273.4319 m
78.7859 522.6916 l
531.1807 522.6916 l
531.1807 273.4319 l
78.7859 273.4319 l
h
W
n
0 R
0 G
3.8637 M
112.6849 466.3868 m
90.6851 442.3868 l
S
168.6851 502.3868 m
118.6849 484.3868 l
S
168.6851 502.3868 m
218.685 484.3868 l
S
112.6849 466.3868 m
90.6851 442.3868 l
S
112.6849 466.3868 m
134.685 442.3868 l
S
134.685 424.3868 m
112.6849 400.3868 l
S
134.685 424.3868 m
157.6849 400.3868 l
S
157.6849 382.3868 m
129.6851 358.3868 l
S
157.6849 382.3868 m
179.685 358.3868 l
S
179.685 340.3868 m
151.6849 316.3868 l
S
179.685 340.3868 m
179.685 316.3868 l
S
179.685 340.3868 m
207.6851 316.3868 l
S
224.685 466.3868 m
190.6849 442.3868 l
S
224.685 466.3868 m
257.685 442.3868 l
S
123.6851 340.3868 m
123.6851 322.3868 l
S
346.6849 466.3868 m
318.6851 442.3868 l
S
346.6849 466.3868 m
368.685 442.3868 l
S
368.685 424.3868 m
340.6849 400.3868 l
S
368.685 424.3868 m
368.685 400.3868 l
S
368.685 424.3868 m
396.6851 400.3868 l
S
491.685 424.3868 m
458.685 400.3868 l
S
491.685 424.3868 m
525.6851 400.3868 l
S
u
0 To
1 0 0 1 156.8511 306.0146 0 Tp
TP
0 Tr
1 O
0 g
4 M
/_Symbol 12 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(\340) Tx 
(\r) TX 
TO
0 To
1 0 0 1 196.8514 432.0146 0 Tp
TP
0 Tr
(\340) Tx 
(\r) TX 
TO
0 To
1 0 0 1 346.8514 390.0146 0 Tp
TP
0 Tr
(\340) Tx 
(\r) TX 
TO
0 To
1 0 0 1 463.8514 390.0146 0 Tp
TP
0 Tr
(\340) Tx 
(\r) TX 
TO
U
0 R
0 G
3.8637 M
463.6849 466.3868 m
435.6851 442.3868 l
S
463.6849 466.3868 m
491.685 442.3868 l
S
u
0 To
1 0 0 1 162.1848 511.1031 0 Tp
TP
0 Tr
1 O
0 g
4 M
/_Times-Roman 12 Tf
(S) Tx 
(\r) TX 
TO
0 To
1 0 0 1 105.1848 475.1031 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 83.1848 432.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 128.1848 432.1035 0 Tp
TP
0 Tr
(S) Tx 
(\r) TX 
TO
0 To
1 0 0 1 102.1848 391.1035 0 Tp
TP
0 Tr
(Comp) Tx 
(\r) TX 
TO
0 To
1 0 0 1 151.1844 391.1035 0 Tp
TP
0 Tr
(S) Tx 
(\r) TX 
TO
0 To
1 0 0 1 117.1848 348.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 172.1844 348.1035 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 145.1844 306.1035 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
0 To
1 0 0 1 173.1848 306.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 201.1848 306.1035 0 Tp
TP
0 Tr
(PP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 214.1844 475.1031 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.1844 432.1035 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
0 To
1 0 0 1 245.1847 432.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 118.1844 310.6812 0 Tp
TP
0 Tr
/_Symbol 12 Tf
( e) Tx 
(\r) TX 
TO
0 To
1 0 0 1 340.1844 475.1031 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
(S) Tx 
(\r) TX 
TO
0 To
1 0 0 1 309.1848 431.1031 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 362.1847 432.1035 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 334.1844 390.1035 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
0 To
1 0 0 1 362.1847 390.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 390.1848 390.1035 0 Tp
TP
0 Tr
(PP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 458.1847 475.1031 0 Tp
TP
0 Tr
(S) Tx 
(\r) TX 
TO
0 To
1 0 0 1 423.1848 432.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 482.1847 432.1035 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 451.1844 390.1035 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
0 To
1 0 0 1 513.1848 390.1035 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 398.1847 511.1031 0 Tp
TP
0 Tr
(S) Tx 
(\r) TX 
TO
U
u
0 To
1 0 0 1 168.667 506 0 Tp
TP
0 Tr
/_Times-Roman 8 Tf
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 118.6671 470 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 96.667 428 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 134.6667 428 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
0 To
1 0 0 1 157.6671 386 0 Tp
TP
0 Tr
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 129.667 344 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 185.6667 344 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 152.6667 301.0004 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 185.6667 301.0004 0 Tp
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 212.6667 301.0004 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 227.6667 470 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 192.667 428 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 258.667 428 0 Tp
TP
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 346.6671 470 0 Tp
TP
0 Tr
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 322.6671 427.0004 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 374.6667 428 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 342.667 386 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 374.6667 386 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 402.667 386 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 464.6667 470 0 Tp
TP
0 Tr
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 436.6671 428 0 Tp
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 494.6667 428 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 459.667 386 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 525.667 386 0 Tp
TP
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 404.6667 506 0 Tp
TP
0 Tr
(m) Tx 
(\r) TX 
TO
U
0 R
0 G
3.8637 M
402.6851 502.3868 m
346.6849 484.3868 l
S
402.6851 502.3868 m
458.685 484.3868 l
S
2 w
206.1851 405.8866 m
148.2705 405.7029 98.2901 415.4808 98.1851 427.3868 c
S
314.1851 427.3868 m
315.1076 415.8574 265.9912 405.9077 206.1851 405.8866 c
S
372.1849 384.3867 m
373.4149 326.7403 307.9268 276.9914 228.1849 276.8866 c
S
228.1849 276.8866 m
205.1264 276.7029 185.2268 286.4808 185.1851 298.3868 c
S
400.185 384.3867 m
401.4108 326.7403 336.1497 276.9914 256.6849 276.8866 c
S
257.4443 276.8899 m
234.1273 276.5051 213.6544 286.1076 213.1917 298.0116 c
213.1908 298.0116 213.1908 298.0116 213.1849 298.3868 c
S
479.1851 355.8867 m
359.6023 355.2759 256.402 387.7926 256.185 427.3868 c
S
522.1849 384.3867 m
522.5522 369.1038 502.9966 355.9144 479.1851 355.8867 c
S
267.1849 398.8868 m
176.5596 398.6433 98.3496 411.6044 98.1851 427.3868 c
S
436.185 427.3868 m
437.6285 412.1037 360.7706 398.9142 267.1849 398.8868 c
S
Q
U
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 198 4585 a Fl(Figure)f(2:)37 b Fj(Relativ)m(e)31 b(clause)g
(paraphrase)83 4703 y Fl(The)39 b(situation)f(is)h(more)f(complex)g(in)
i(paraphrasing:)0 4802 y(b)n(y)j(de\014nition,)49 b(the)44
b(mappings)f(are)f(b)r(et)n(w)n(een)i(units)g(of)0 4902
y(text)34 b(with)f(di\013ering)h(syn)n(tactic)e(prop)r(erties.)53
b(F)-7 b(or)33 b(exam-)0 5001 y(ple,)26 b(the)f(mapping)g(of)g
(examples)g(\(2a\))g(and)f(\(2b\))i(in)n(v)n(olv)n(es)0
5101 y(the)32 b(pairing)e(of)i(t)n(w)n(o)f(deriv)n(ed)f(trees,)i(as)f
(in)h(Figure)f(2.)48 b(In)0 5201 y(this)36 b(case,)i(b)r(oth)e(trees)g
(are)f(deriv)n(ed)g(ones.)62 b(A)37 b(problem)0 5300
y(with)f(the)g(ST)-7 b(A)n(G)36 b(formalism)f(in)h(this)g(situation)f
(is)h(that)0 5400 y(it)26 b(do)r(esn't)g(capture)f(the)h(generalit)n(y)
f(of)g(the)i(mapping)e(b)r(e-)2025 83 y(t)n(w)n(een)e(\(2a\))h(and)g
(\(2b\);)h(separate)d(tree)i(pairings)e(will)i(ha)n(v)n(e)2025
183 y(to)d(b)r(e)h(made)f(for)g(v)n(erbs)g(in)g(the)h(matrix)f(clause)g
(whic)n(h)g(ha)n(v)n(e)2025 282 y(complemen)n(tation)k(patterns)f
(di\013eren)n(t)h(from)g(that)h(of)f(the)2025 382 y(ab)r(o)n(v)n(e)17
b(examples;)k(the)e(same)f(is)g(true)g(for)g(v)n(erbs)g(in)g(the)h
(sub-)2025 482 y(ordinate)33 b(clause.)57 b(F)-7 b(or)33
b(more)h(complex)f(matc)n(hings,)j(the)2025 581 y(making)24
b(and)h(pairing)f(of)h(deriv)n(ed)g(trees)f(b)r(ecomes)h(com)n(bi-)2025
681 y(natorially)h(large.)2108 791 y(A)35 b(more)e(compact)h
(de\014nition)g(is)g(to)g(ha)n(v)n(e)g(links,)h(of)f(a)2025
890 y(kind)40 b(di\013eren)n(t)g(from)g(the)g(standard)g(ST)-7
b(A)n(G)40 b(links,)j(b)r(e-)2025 990 y(t)n(w)n(een)c(no)r(des)g
(higher)g(in)h(the)f(tree.)72 b(In)40 b(ST)-7 b(A)n(G,)40
b(a)f(link)2025 1089 y(b)r(et)n(w)n(een)g(t)n(w)n(o)g(no)r(des)h(sp)r
(eci\014es)f(that)h(an)n(y)f(substitution)2025 1189 y(or)31
b(adjunction)g(o)r(ccurring)f(at)i(one)f(no)r(de)g(m)n(ust)h(b)r(e)g
(repli-)2025 1289 y(cated)22 b(at)g(the)h(other.)34 b(This)22
b(new)g(prop)r(osed)g(link)g(w)n(ould)g(b)r(e)2025 1388
y(a)i(summary)f(link)h(indicating)g(the)g(sync)n(hronisation)e(of)i(an)
2025 1488 y(en)n(tire)31 b(subtree:)44 b(more)31 b(precisely)-7
b(,)32 b(eac)n(h)f(subno)r(de)g(of)h(the)2025 1588 y(no)r(de)f(with)h
(the)g(summary)e(link)i(is)f(mapp)r(ed)h(to)f(the)g(cor-)2025
1687 y(resp)r(onding)24 b(no)r(de)i(in)f(the)h(paired)f(tree)g(in)g(a)g
(sync)n(hronous)2025 1787 y(depth-\014rst)33 b(tra)n(v)n(ersal)d(of)j
(the)g(subtree.)52 b(Naturally)-7 b(,)34 b(this)2025
1886 y(can)i(only)h(b)r(e)g(de\014ned)g(for)f(pairs)g(of)g(no)r(des)h
(whic)n(h)f(ha)n(v)n(e)2025 1986 y(the)28 b(same)f(structure)2705
1956 y Fi(1)2742 1986 y Fl(;)h(that)g(is,)g(in)g(the)g(con)n(text)g(of)
g(para-)2025 2086 y(phrasing,)22 b(it)g(is)g(e\013ectiv)n(ely)g(a)g
(statemen)n(t)g(that)g(the)h(paired)2025 2185 y(subtrees)32
b(are)g(iden)n(tical.)52 b(So,)34 b(for)e(example,)i(a)e(mapping)2025
2285 y(b)r(et)n(w)n(een)27 b(the)g(no)r(des)g(lab)r(elled)g
Fh(V)19 b(P)3146 2297 y Fi(1)3210 2285 y Fl(in)27 b(eac)n(h)g(of)f(the)
i(trees)2025 2385 y(of)g(the)g(example)g(describ)r(ed)g(ab)r(o)n(v)n(e)
f(w)n(ould)g(b)r(e)i(an)f(appro-)2025 2484 y(priate)37
b(place)h(to)f(ha)n(v)n(e)g(suc)n(h)g(a)h(summary)f(link:)57
b(b)n(y)38 b(es-)2025 2584 y(tablishing)23 b(a)h(mapping)f(b)r(et)n(w)n
(een)h(eac)n(h)f(subno)r(de)h(of)g Fh(V)18 b(P)3839 2596
y Fi(1)3877 2584 y Fl(,)2025 2683 y(this)28 b(co)n(v)n(ers)d
(di\013eren)n(t)j(t)n(yp)r(es)g(of)f(matrix)g(clauses.)2108
2793 y(Another)40 b(feature)g(of)g(using)g(ST)-7 b(A)n(Gs)40
b(for)g(paraphras-)2025 2893 y(ing)31 b(is)h(that)g(the)g(links)f(are)g
(not)h(necessarily)e(one-to-one.)2025 2992 y(In)h(the)h(righ)n(t-hand)e
(tree)h(of)g(the)h(Figure)62 b(2)31 b(pairing,)g(the)2025
3092 y(sub)5 b(ject)29 b(NPs)f(of)g(b)r(oth)h(sen)n(tences)f(are)g
(link)n(ed)g(to)g Fh(N)9 b(P)3767 3104 y Fi(1)3833 3092
y Fl(of)2025 3192 y(the)30 b(left-hand)f(tree;)h(this)g(is)f(a)g
(statemen)n(t)g(that)h(b)r(oth)g(re-)2025 3291 y(sulting)h(sen)n
(tences)f(ha)n(v)n(e)f(the)i(same)f(sub)5 b(ject.)46
b(This)30 b(do)r(es)2025 3391 y(not,)38 b(ho)n(w)n(ev)n(er,)d(c)n
(hange)g(the)h(prop)r(erties)f(in)h(an)n(y)f(signi\014-)2025
3491 y(can)n(t)27 b(w)n(a)n(y)-7 b(.)2365 3460 y Fi(2)2108
3600 y Fl(It)27 b(is)g(also)e(useful)j(to)e(add)h(another)f(t)n(yp)r(e)
h(of)f(link)h(whic)n(h)2025 3700 y(is)e(non-standard,)g(in)h(that)f(it)
h(is)g(not)f(just)h(a)f(link)h(b)r(et)n(w)n(een)2025
3800 y(no)r(des)35 b(at)g(whic)n(h)h(adjunction)f(and)h(substitution)g
(o)r(ccur,)2025 3899 y(but)30 b(whic)n(h)g(represen)n(ts)e(shared)g
(attributes.)43 b(It)30 b(connects)2025 3999 y(no)r(des)f(suc)n(h)g(as)
g(the)h(main)f(v)n(erb)g(of)g(eac)n(h)g(tree,)h(and)f(indi-)2025
4098 y(cates)24 b(that)g(particular)g(attributes)g(are)f(held)i(in)g
(common.)2025 4198 y(F)-7 b(or)37 b(example,)i(mapping)e(b)r(et)n(w)n
(een)g(activ)n(e)f(and)h(passiv)n(e)2025 4298 y(v)n(oice)i(v)n(ersions)
g(of)i(a)f(sen)n(tence)g(is)g(represen)n(ted)f(b)n(y)i(the)2025
4397 y(tree)33 b(in)g(Figure)f(3.)53 b(The)33 b(v)n(erb)f(in)h(the)g
(activ)n(e)g(v)n(ersion)e(of)2025 4497 y(\(3\))41 b(\()p
Fk(br)l(oke)p Fl(\))h(shares)e(the)h(attribute)g(of)g(tense)f(with)i
(the)2025 4597 y(auxiliary)e(v)n(erb)g Fg(n)p Fk(b)l(e)p
Fg(n)p Fl(,)k(and)c(the)i(lexical)e(comp)r(onen)n(t)h(is)2025
4696 y(shared)30 b(with)h(the)g(main)f(v)n(erb)g(of)h(the)g(passiv)n(e)
e(tree)i(\()p Fk(br)l(o-)p 2025 4811 499 4 v 2129 4864
a Ff(1)2163 4896 y Fe(More)d(precisely)-6 b(,)29 b(they)d(need)h(only)g
(ha)n(v)n(e)g(the)g(same)g(n)n(um-)2025 4979 y(b)r(er)f(and)f(t)n(yp)r
(e)g(of)h(argumen)n(t)f(slots.)2129 5036 y Ff(2)2163
5068 y Fe(This)38 b(is)g(equiv)l(alen)n(t)e(to)h(there)g(b)r(eing)h
Fd(m)e Fe(dumm)n(y)e(c)n(hild)2025 5151 y(no)r(des)g(of)g(the)f(no)r
(de)h(at)g(the)f(m)n(ultiple)g(end)g(of)h(an)g Fd(m)p
Fe(:1)g(link,)2025 5234 y(eac)n(h)i(c)n(hild)g(no)r(de)g(b)r(eing)g
(exactly)g(the)f(same)h(as)h(the)e(paren)n(t)2025 5317
y(with)j(fully)f(re-en)n(tran)n(t)g(feature)h(structures,)j(with)d(one)
f(link)2025 5400 y(b)r(eing)26 b(systematically)g(allo)r(cated)h(to)f
(eac)n(h)g(c)n(hild.)p eop
%%Page: 3 3
3 2 bop 0 83 a Fk(ken)p Fl(\),)25 b(whic)n(h)e(tak)n(es)f(the)i(past)f
(participle)g(form.)35 b(This)23 b(sort)0 183 y(of)j(link)h(is)f
(unnecessary)e(when)j(ST)-7 b(A)n(Gs)26 b(are)f(used)h(in)h(MT,)0
282 y(as)35 b(the)h(trees)e(are)h(lexicalised,)h(and)g(the)f
(information)g(is)0 382 y(shared)41 b(in)h(the)h(transfer)e(lexicon.)80
b(Since,)46 b(with)d(para-)0 482 y(phrasing,)33 b(the)g(transfer)e
(lexicon)h(do)r(es)h(not)f(pla)n(y)g(suc)n(h)g(a)0 581
y(role,)37 b(the)f(shared)f(information)g(is)h(represen)n(ted)e(b)n(y)i
(this)0 681 y(new)30 b(t)n(yp)r(e)g(of)g(link)g(b)r(et)n(w)n(een)g(the)
g(trees,)g(where)g(the)g(links)0 780 y(are)44 b(lab)r(elled)g
(according)f(to)i(the)g(information)f(shared.)0 880 y(Hence,)32
b(no)r(de)f Fh(V)526 892 y Fi(1)594 880 y Fl(in)h(the)f(activ)n(e)f
(tree)h(has)f(a)g Fc(tense)i Fl(link)0 980 y(with)d(no)r(de)f
Fh(V)439 992 y Fi(0)506 980 y Fl(in)g(the)h(passiv)n(e)e(tree,)i(where)
f(tense)g(is)h(the)0 1079 y(attribute)i(in)h(common;)h(and)e(a)g
Fc(lex)g Fl(link)g(with)h(no)r(de)f Fh(V)1837 1091 y
Fi(1)0 1179 y Fl(in)d(the)g(passiv)n(e)e(tree,)h(where)h(the)g(lexeme)f
(is)g(shared.)1712 1149 y Fi(3)0 1364 y Fo(3)112 b(Notation)0
1484 y Fl(In)47 b(paraphrasing,)j(the)e(tree)e(notation)h(th)n(us)g(b)r
(ecomes)0 1584 y(fairly)18 b(clumsy:)32 b(as)18 b(w)n(ell)g(as)g
(consuming)f(a)h(large)f(amoun)n(t)h(of)0 1683 y(space)h(\(giv)n(en)h
(the)g(large)f(deriv)n(ed)g(trees\),)i(it)g(fails)e(to)h(re\015ect)0
1783 y(the)k(generalit)n(y)f(pro)n(vided)g(b)n(y)h(the)g(summary)g
(links.)35 b(That)0 1883 y(is,)41 b(it)d(is)g(not)g(p)r(ossible)g(to)g
(de\014ne)h(a)e(mapping)h(b)r(et)n(w)n(een)0 1982 y(t)n(w)n(o)i
(structures)g(re\015ecting)g(their)g(common)h(features)f(if)0
2082 y(the)30 b(structures)f(are)g(not,)h(as)f(is)h(standard)e(in)i(ST)
-7 b(A)n(G,)30 b(en-)0 2181 y(tire)k(elemen)n(tary)g(or)f(deriv)n(ed)h
(trees.)56 b(Therefore,)35 b(a)f(new)0 2281 y(and)23
b(more)f(compact)h(notation)f(is)h(prop)r(osed)f(to)h(o)n(v)n(ercome)0
2381 y(these)28 b(t)n(w)n(o)e(disadv)-5 b(an)n(tages.)83
2480 y(The)33 b(new)g(notation)f(has)g(three)h(parts:)46
b(the)33 b(\014rst)g(part)0 2580 y(uniquely)21 b(de\014nes)f(eac)n(h)g
(tree)h(of)f(a)h(sync)n(hronous)d(tree)j(pair;)0 2680
y(the)33 b(second)f(part)h(describ)r(es,)g(also)f(uniquely)-7
b(,)34 b(the)f(no)r(des)0 2779 y(that)j(will)h(b)r(e)f(part)f(of)h(the)
h(links;)j(the)c(third)h(part)e(links)0 2879 y(the)g(trees)f(via)g
(these)h(no)r(des.)58 b(So,)36 b(let)f(v)-5 b(ariables)33
b Fh(X)41 b Fl(and)0 2978 y Fh(Y)58 b Fl(stand)38 b(for)h(an)n(y)f
(string)g(of)h(argumen)n(t)f(t)n(yp)r(es)h(accept-)0
3078 y(able)25 b(in)h(tree)g(names;)g(for)f(example,)g
Fh(X)33 b Fl(could)25 b(b)r(e)h(nx1nx2)0 3178 y(and)42
b Fh(Y)62 b Fl(n1.)81 b(Then,)47 b(for)42 b(example,)k(the)d(tree)f
(for)g(\(2a\))0 3277 y(can)37 b(b)r(e)h(de\014ned)g(as)e(the)i
(adjunction)g(of)f(a)g Fh(\014)t Fl(N0nx0V)p Fh(X)0 3377
y Fl(tree)31 b(\(generic)g(relativ)n(e)g(clause)g(tree,)h(standing)f
(for,)h(e.g.,)0 3477 y Fh(\014)t Fl(N0nx0Vnx1nx2\))53
b(in)n(to)27 b(an)g Fh(\013)p Fl(n0V)p Fh(Y)46 b Fl(tree;)27
b(the)h(tree)f(for)0 3576 y(\(2b\))39 b(can)e(b)r(e)i(de\014ned)g(as)e
(a)h(conjoined)g(S)h(tree,)h(ha)n(ving)0 3676 y(a)e(paren)n(t)g
Fh(S)403 3688 y Fb(m)504 3676 y Fl(no)r(de)h(and)f(2)g(c)n(hild)h(no)r
(des)f Fh(\013)p Fl(n0V)p Fh(X)45 b Fl(and)0 3775 y Fh(\013)p
Fl(n0V)p Fh(Y)19 b Fl(.)150 3868 y
 12432751 7104430 5788794 17695293 35324805 34535424 startTexFig
 150 3868 a
%%BeginDocument: diag.eps-5.2
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 18 612 1 634 437 18 0 1 2 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
q
300 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
88.5 270 m
88.5 524.6666 l
536.1667 524.3333 l
536.5 270 l
88.5 270 l
h
W
n
0 R
0 G
3.8637 M
151.6125 505.8941 m
101.6123 487.8941 l
S
151.6125 505.8941 m
202.6125 487.8941 l
S
207.6122 468.8943 m
174.6122 444.8943 l
S
207.6122 468.8943 m
241.6125 444.8943 l
S
360.6122 505.8941 m
309.6122 487.8941 l
S
360.6122 505.8941 m
410.6123 487.8941 l
S
481.6125 383.8942 m
448.6125 358.8941 l
S
481.6125 382.8941 m
515.6123 358.8941 l
S
409.6125 469.8941 m
376.6125 445.8941 l
S
409.6125 469.8941 m
443.6123 445.8941 l
S
377.6123 430.8941 m
377.6123 401.8942 l
S
0 To
1 0 0 1 152.4458 510.4275 0 Tp
TP
0 Tr
1 O
0 g
4 M
/_Times-Roman 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 103.4457 471.4271 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 211.445 474.4272 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 174.445 432.4271 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.445 431.4271 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 360.4457 510.4275 0 Tp
TP
0 Tr
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.445 474.4272 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 517.4458 342.4272 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 413.4458 475.4275 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 379.445 432.4272 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 448.445 430.4275 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 413.4458 389.4275 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 178.4451 434.522 0 Tp
TP
0 Tr
/_Symbol 12 Tf
(\340) Tx 
(\r) TX 
TO
0 To
1 0 0 1 416.4458 391.522 0 Tp
TP
0 Tr
(\340) Tx 
(\r) TX 
TO
U
0 R
0 G
3.8637 M
445.6125 425.8942 m
412.6125 401.8942 l
S
445.6125 425.8942 m
479.6123 401.8942 l
S
449.6123 343.8941 m
449.6123 314.8942 l
S
2 w
392.1122 272.3943 m
233.9199 270.7368 97.3992 358.9644 97.1123 466.3942 c
S
514.1123 344.3943 m
515.1548 305.7845 459.6712 272.4643 392.1122 272.3943 c
S
277.1123 409.3942 m
257.8078 409.2575 241.1475 416.5337 241.1123 425.3943 c
S
313.1123 473.8942 m
313.4198 439.3063 297.0478 409.457 277.1123 409.3942 c
S
284.1122 394.3942 m
226.1977 394.0864 176.2172 410.4587 176.1122 430.3942 c
S
377.1122 430.3942 m
377.9067 411.0892 335.6123 394.4291 284.1122 394.3942 c
S
348.6122 365.3943 m
256.11 364.839 176.2805 394.3996 176.1122 430.3942 c
S
413.1122 387.3941 m
413.4844 375.6292 385.3486 365.6912 349.7381 365.3975 c
S
u
0 To
1 0 0 1 367.4457 390.9439 0 Tp
TP
0 Tr
1 O
0 g
1 w 4 M
/_Times-Roman 12 Tf
(\\be\\) Tx 
(\r) TX 
TO
0 To
1 0 0 1 442.4457 304.9442 0 Tp
TP
0 Tr
(by) Tx 
(\r) TX 
TO
U
0 To
1 0 0 1 145.4457 512.9438 0 Tp
TP
0 Tr
(S) Tx 
(\r) TX 
TO
0 To
1 0 0 1 90.4457 474.9438 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 353.4451 513.9439 0 Tp
TP
0 Tr
(S) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 197.4451 476.9438 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 167.4451 433.9442 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
0 To
1 0 0 1 228.4458 433.9442 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 299.4451 476.9438 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 473.445 390.9439 0 Tp
TP
0 Tr
(PP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 445.4457 348.9439 0 Tp
TP
0 Tr
(P) Tx 
(\r) TX 
TO
0 To
1 0 0 1 502.4457 347.9438 0 Tp
TP
0 Tr
(NP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 399.4458 477.9439 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 371.4451 435.9439 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
0 To
1 0 0 1 435.4458 433.9442 0 Tp
TP
0 Tr
(VP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 404.4451 390.9439 0 Tp
TP
0 Tr
(V) Tx 
(\r) TX 
TO
U
u
0 To
1 0 0 1 279.7792 381.3273 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
(TENSE) Tx 
(\r) TX 
TO
0 To
1 0 0 1 284.7784 352.3276 0 Tp
TP
0 Tr
(LEX) Tx 
(\r) TX 
TO
U
Q
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 146 4951 a Fl(Figure)27 b(3:)37 b Fj(P)m(araphrase)d(with)d(partial)h
(links)83 5069 y Fl(The)44 b(second)g(part)g(of)g(the)g(notation)g
(requires)f(pic)n(k-)0 5169 y(ing)28 b(out)g(imp)r(ortan)n(t)g(no)r
(des.)38 b(The)28 b(iden)n(ti\014cation)g(sc)n(heme)p
0 5232 499 4 v 104 5285 a Ff(3)138 5317 y Fe(The)k(determination)f(of)i
(a)f(precise)g(set)g(of)g(link)g(lab)r(els)g(is)0 5400
y(future)25 b(w)n(ork.)2025 83 y Fl(prop)r(osed)35 b(here)h(has)g(a)g
(string)g(comprising)f(no)r(de)h(lab)r(els)2025 183 y(with)f(relations)
f(b)r(et)n(w)n(een)h(them,)i(signifying)d(a)g(relation-)2025
282 y(ship)h(tak)n(en)e(from)i(the)f(set)h Fg(f)p Fl(paren)n(t,)g(c)n
(hild,)h(left-sibling,)2025 382 y(righ)n(t-sibling)p
Fg(g)p Fl(,)c(abbreviated)f Fg(f)p Fl(p,)j(c,)g(ls,)f(rs)p
Fg(g)p Fl(.)51 b(The)32 b(no)r(de)2025 482 y Fh(N)9 b(P)2154
494 y Fi(1)2226 482 y Fl(of)35 b(the)g(left-hand)g(tree)g(of)f(Figure)h
(2)f(can)g(then)i(b)r(e)2025 581 y(describ)r(ed)28 b(b)n(y)f(the)h
(string)g Fh(N)9 b(P)j(pN)d(P)j(pS)3305 593 y Fb(r)3340
581 y Fh(pN)d(I)e(L)p Fl(;)27 b(an)h(asso-)2025 681 y(ciated)f
(mnemonic)h(nic)n(kname)f(migh)n(t)h(b)r(e)g Fh(T)3435
693 y Fi(1)3471 681 y Fh(subj)5 b(N)k(P)j Fl(.)2108 780
y(The)30 b(third)g(part)f(of)g(the)i(represen)n(tation)d(is)h(then)h
(link-)2025 880 y(ing)39 b(the)g(no)r(des.)72 b(Standard)38
b(links)h(are)f(represen)n(ted)g(b)n(y)2025 980 y(an)33
b(equal)g(sign;)j(other)c(links)h(are)g(represen)n(ted)f(with)i(the)
2025 1079 y(link)51 b(t)n(yp)r(e)h(subscripted)f(to)g(the)g(equal)g
(sign.)107 b(Th)n(us,)2025 1179 y(for)60 b(Figure)f(2,)68
b Fh(T)2661 1191 y Fi(1)2698 1179 y Fh(subj)5 b(N)k(P)j
Fl(=)p Fh(T)3115 1191 y Fi(2)3150 1179 y Fh(l)r(ef)d(tsubj)c(N)k(P)j
Fl(,)66 b(where)2025 1279 y Fh(T)2074 1291 y Fi(2)2111
1279 y Fh(l)r(ef)9 b(tsubj)c(N)k(P)55 b Fl(is)45 b Fh(N)9
b(P)j(pS)2938 1291 y Fb(r)2974 1279 y Fh(pS)3067 1291
y Fb(m)3130 1279 y Fh(pN)d(I)e(L)45 b Fl(for)g(the)h(righ)n(t-)2025
1378 y(hand)28 b(tree.)2108 1478 y(F)-7 b(or)33 b(a)f(tabular)h
(represen)n(tation)e(using)i(this)h(notation,)2025 1577
y(see)27 b(Dras)g(\(1997a\).)2025 1759 y Fo(4)112 b(Conclusion)2025
1877 y Fl(Sync)n(hronous)37 b(T)-7 b(A)n(Gs)38 b(are)f(a)h(useful)g
(represen)n(tation)f(for)2025 1977 y(paraphrasing,)43
b(the)f(mapping)g(b)r(et)n(w)n(een)f(parallel)g(texts)2025
2076 y(of)c(the)h(same)f(language)e(whic)n(h)j(ha)n(v)n(e)e(di\013eren)
n(t)h(syn)n(tac-)2025 2176 y(tic)26 b(structure.)36 b(A)27
b(n)n(um)n(b)r(er)f(of)g(mo)r(di\014cations)f(need)i(to)f(b)r(e)2025
2276 y(made,)41 b(ho)n(w)n(ev)n(er,)e(to)g(prop)r(erly)e(capture)h(the)
h(nature)f(of)2025 2375 y(paraphrases:)32 b(the)25 b(creation)e(of)g(a)
h(new)g(t)n(yp)r(e)g(of)g(summary)2025 2475 y(link,)k(to)g(comp)r
(ensate)g(for)f(the)i(increased)e(imp)r(ortance)g(of)2025
2574 y(deriv)n(ed)39 b(trees;)45 b(the)39 b(allo)n(wing)f(of)i(man)n
(y-to-man)n(y)d(links)2025 2674 y(b)r(et)n(w)n(een)h(trees;)k(the)c
(creation)f(of)h(partial)f(links,)j(whic)n(h)2025 2774
y(allo)n(w)25 b(some)g(information)g(to)h(b)r(e)g(shared;)g(and)f(a)h
(new)g(no-)2025 2873 y(tation)32 b(whic)n(h)f(expresses)g(the)h
(generalit)n(y)e(of)i(paraphras-)2025 2973 y(ing.)2025
3195 y Fo(References)2025 3326 y Fe(Ab)r(eill)n(\023)-36
b(e,)36 b(Anne,)e(Y.)f(Sc)n(hab)r(es)h(and)e(A.)h(Joshi.)58
b(1990.)h(Using)2108 3409 y(Lexicalised)38 b(T)-6 b(ags)39
b(for)f(Mac)n(hine)g(T)-6 b(ranslation.)70 b Fa(Pr)l(o)l(c.)38
b(of)2108 3492 y(COLING90)p Fe(,)26 b(1{6.)2025 3598
y(Chandrasek)l(ar,)34 b(R.,)g(C.)e(Doran,)i(B.)e(Sriniv)l(as.)53
b(1996.)h(Moti-)2108 3681 y(v)l(ations)24 b(and)f(Metho)r(ds)h(for)g(T)
-6 b(ext)23 b(Simpli\014cation.)33 b Fa(Pr)l(o)l(c.)26
b(of)2108 3764 y(COLING96)p Fe(,)g(1041{1044.)2025 3870
y(Doran,)i(Christ)n(y)-6 b(,)27 b(D.)g(Egedi,)i(B.A.)e(Ho)r(c)n(k)n(ey)
-6 b(,)27 b(B.)g(Sriniv)l(as)g(and)2108 3953 y(M.)j(Zaidel.)48
b(1994.)g(XT)-6 b(A)n(G)28 b(System)h(-)g(A)g(Wide)h(Co)n(v)n(erage)
2108 4036 y(Grammar)25 b(of)h(English.)36 b Fa(Pr)l(o)l(c.)28
b(of)f(COLING94)p Fe(,)f(922{928.)2025 4143 y(Dras,)41
b(Mark.)69 b(1997a.)i(Represen)n(ting)37 b(P)n(araphrases)i(Using)2108
4226 y(Sync)n(hronous)34 b(T)-6 b(ree)36 b(Adjoining)g(Grammars.)62
b Fa(1997)37 b(A)n(us-)2108 4309 y(tr)l(alasian)29 b(NLP)e(Summer)h
(Workshop)p Fe(,)f(17{24.)2025 4415 y(Dras,)g(Mark.)35
b(1997b.)h(Reluctan)n(t)26 b(P)n(araphrase:)36 b(T)-6
b(extual)26 b(Re-)2108 4498 y(structuring)d(under)g(an)g(Optimisation)h
(Mo)r(del.)34 b(Submitted)2108 4581 y(to)26 b Fa(P)-6
b(A)n(CLING97)p Fe(.)2025 4688 y(Joshi,)31 b(Ara)n(vind,)e(L.)g(Levy)f
(and)g(M.)h(T)-6 b(ak)l(ahashi.)44 b(1975.)i(T)-6 b(ree)2108
4771 y(Adjunct)25 b(Grammars.)35 b Fa(J.)27 b(of)g(Computer)i(and)g
(System)g(Sci-)2108 4854 y(enc)l(es)p Fe(,)e(10\(1\).)2025
4960 y(Shieb)r(er,)20 b(Stuart)e(and)g(Y.)g(Sc)n(hab)r(es.)32
b(1990.)h(Sync)n(hronous)18 b(T)-6 b(ree)2108 5043 y(Adjoining)26
b(Grammars.)34 b Fa(Pr)l(o)l(c.)28 b(of)f(COLING90)p
Fe(,)f(253{258.)2025 5158 y(XT)-6 b(A)n(G)30 b(Researc)n(h)g(Group.)48
b(1995.)i(A)30 b(Lexicalised)h(T)-6 b(ree)31 b(Ad-)2108
5249 y(joining)f(Grammar)e(for)h(English.)44 b Fa(Univ.)30
b(of)g(Pennsylvania)2108 5340 y(T)-6 b(e)l(chnic)l(al)28
b(R)l(ep)l(ort)h(IR)n(CS)e(95-03)p Fe(.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
